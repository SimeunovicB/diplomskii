[{"C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\index.js":"1","C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\reportWebVitals.js":"2","C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\App.js":"3","C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\Views\\User.js":"4","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\index.js":"5","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\App.js":"6","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\layout\\Layout.js":"7","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Home.js":"8","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\NewFighter.js":"9","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\AllFighters.js":"10","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\layout\\MainNavigation.js":"11","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\FighterList.js":"12","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\NewFighterForm.js":"13","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\FighterItem.js":"14","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\ui\\Card.js":"15","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\NewTournament.js":"16","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\AllTournaments.js":"17","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\MyProfile.js":"18","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Login.js":"19","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Register.js":"20","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\TournamentList.js":"21","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\NewTournamentForm.js":"22","G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\TournamentItem.js":"23","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\index.js":"24","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\App.js":"25","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\layout\\Layout.js":"26","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\AllFighters.js":"27","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Home.js":"28","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Login.js":"29","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewFighter.js":"30","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Register.js":"31","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\MyProfile.js":"32","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\FighterList.js":"33","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\NewFighterForm.js":"34","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\layout\\MainNavigation.js":"35","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\FighterItem.js":"36","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\ui\\Card.js":"37","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewFight.js":"38","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\FightList.js":"39","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\FightItem.js":"40","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\NewFightForm.js":"41","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewEvent.js":"42","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\AllEvents.js":"43","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\NewEventForm.js":"44","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\EventList.js":"45","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\EventItem.js":"46","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\ImageUpload.js":"47","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Prezime.js":"48","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\EventFights.js":"49","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\UpcomingEventsAndFights.js":"50","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\EventAndFightList.js":"51","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\EventAndFightItem.js":"52","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\FightForEvent.js":"53","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\PastEventsAndFights.js":"54","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastEventAndFightList.js":"55","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastEventAndFightItem.js":"56","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastFightList.js":"57","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\results\\AddResultsForFightsList.js":"58","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\results\\AddResultsForFightsItem.js":"59","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\AddBet.js":"60","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\MyBets.js":"61","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\BetList.js":"62","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\BetItem.js":"63","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\users\\InactiveUsers.js":"64","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\users\\InactiveUserItem.js":"65"},{"size":500,"mtime":499162500000,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":499162500000,"results":"68","hashOfConfig":"67"},{"size":1074,"mtime":1624321099514,"results":"69","hashOfConfig":"67"},{"size":752,"mtime":1624368303012,"results":"70","hashOfConfig":"67"},{"size":500,"mtime":1626919489333,"results":"71","hashOfConfig":"72"},{"size":2779,"mtime":1626919489159,"results":"73","hashOfConfig":"72"},{"size":332,"mtime":1626919489176,"results":"74","hashOfConfig":"72"},{"size":241,"mtime":1626919489204,"results":"75","hashOfConfig":"72"},{"size":726,"mtime":1626919489251,"results":"76","hashOfConfig":"72"},{"size":1238,"mtime":1626919489195,"results":"77","hashOfConfig":"72"},{"size":1645,"mtime":1626919489190,"results":"78","hashOfConfig":"72"},{"size":455,"mtime":1626919489168,"results":"79","hashOfConfig":"72"},{"size":945,"mtime":1626316333647,"results":"80","hashOfConfig":"72"},{"size":337,"mtime":1626316333641,"results":"81","hashOfConfig":"72"},{"size":172,"mtime":1626316333664,"results":"82","hashOfConfig":"72"},{"size":771,"mtime":1626919489255,"results":"83","hashOfConfig":"72"},{"size":1297,"mtime":1626919489198,"results":"84","hashOfConfig":"72"},{"size":4828,"mtime":1626919489236,"results":"85","hashOfConfig":"72"},{"size":2602,"mtime":1626919489232,"results":"86","hashOfConfig":"72"},{"size":3785,"mtime":1626919489259,"results":"87","hashOfConfig":"72"},{"size":498,"mtime":1626919489322,"results":"88","hashOfConfig":"72"},{"size":972,"mtime":1626919489301,"results":"89","hashOfConfig":"72"},{"size":346,"mtime":1626919489311,"results":"90","hashOfConfig":"72"},{"size":604,"mtime":1629327309703,"results":"91","hashOfConfig":"92"},{"size":9494,"mtime":1629312818241,"results":"93","hashOfConfig":"92"},{"size":366,"mtime":1629254051924,"results":"94","hashOfConfig":"92"},{"size":1238,"mtime":1626961379621,"results":"95","hashOfConfig":"92"},{"size":247,"mtime":1629254181790,"results":"96","hashOfConfig":"92"},{"size":2338,"mtime":1629255825731,"results":"97","hashOfConfig":"92"},{"size":948,"mtime":1628421492140,"results":"98","hashOfConfig":"92"},{"size":12632,"mtime":1629333668145,"results":"99","hashOfConfig":"92"},{"size":12906,"mtime":1628905117152,"results":"100","hashOfConfig":"92"},{"size":723,"mtime":1628725053670,"results":"101","hashOfConfig":"92"},{"size":4874,"mtime":1628721107194,"results":"102","hashOfConfig":"92"},{"size":2536,"mtime":1629256690811,"results":"103","hashOfConfig":"92"},{"size":1456,"mtime":1629258081971,"results":"104","hashOfConfig":"92"},{"size":172,"mtime":1626961379680,"results":"105","hashOfConfig":"92"},{"size":1714,"mtime":1628724149732,"results":"106","hashOfConfig":"92"},{"size":572,"mtime":1627055775421,"results":"107","hashOfConfig":"92"},{"size":3624,"mtime":1628686137545,"results":"108","hashOfConfig":"92"},{"size":3664,"mtime":1629161457286,"results":"109","hashOfConfig":"92"},{"size":794,"mtime":1628421353425,"results":"110","hashOfConfig":"92"},{"size":1207,"mtime":1628724641459,"results":"111","hashOfConfig":"92"},{"size":1471,"mtime":1627168490034,"results":"112","hashOfConfig":"92"},{"size":2368,"mtime":1628273481318,"results":"113","hashOfConfig":"92"},{"size":1132,"mtime":1628722385792,"results":"114","hashOfConfig":"92"},{"size":741,"mtime":1627297063361,"results":"115","hashOfConfig":"92"},{"size":8403,"mtime":1629259580867,"results":"116","hashOfConfig":"92"},{"size":2477,"mtime":1628191364870,"results":"117","hashOfConfig":"92"},{"size":1093,"mtime":1628697698565,"results":"118","hashOfConfig":"92"},{"size":990,"mtime":1629256204543,"results":"119","hashOfConfig":"92"},{"size":1879,"mtime":1629256317238,"results":"120","hashOfConfig":"92"},{"size":2954,"mtime":1629258690816,"results":"121","hashOfConfig":"92"},{"size":1128,"mtime":1628251411197,"results":"122","hashOfConfig":"92"},{"size":534,"mtime":1628436124510,"results":"123","hashOfConfig":"92"},{"size":2158,"mtime":1628436873100,"results":"124","hashOfConfig":"92"},{"size":1781,"mtime":1628437065430,"results":"125","hashOfConfig":"92"},{"size":12710,"mtime":1629260857345,"results":"126","hashOfConfig":"92"},{"size":4765,"mtime":1629257525220,"results":"127","hashOfConfig":"92"},{"size":15331,"mtime":1629334403648,"results":"128","hashOfConfig":"92"},{"size":2540,"mtime":1628879313381,"results":"129","hashOfConfig":"92"},{"size":2711,"mtime":1628720257121,"results":"130","hashOfConfig":"92"},{"size":6701,"mtime":1628805014701,"results":"131","hashOfConfig":"92"},{"size":1680,"mtime":1629241646639,"results":"132","hashOfConfig":"92"},{"size":8340,"mtime":1629257869422,"results":"133","hashOfConfig":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ziyk4",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mpqmiv",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fhjlnj",{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"186"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"186"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"186"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"186"},"C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\index.js",[],"C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\App.js",[],"C:\\Users\\Bojan\\Desktop\\pocmetni projekat django react\\projekat\\reactapp\\src\\Views\\User.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\index.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\App.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\layout\\Layout.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Home.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\NewFighter.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\AllFighters.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\layout\\MainNavigation.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\FighterList.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\NewFighterForm.js",[],["273","274"],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\fighters\\FighterItem.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\ui\\Card.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\NewTournament.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\AllTournaments.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\MyProfile.js",["275"],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Login.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\pages\\Register.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\TournamentList.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\NewTournamentForm.js",[],"G:\\FAKS PREDMETI\\diplomski\\diplomski-react-django\\ISA\\reactapp\\src\\components\\tournaments\\TournamentItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\index.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\App.js",["276"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"./components/layout/Layout\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/pages/Home\";\r\nimport AllFighters from \"./components/pages/AllFighters\";\r\nimport NewFighter from \"./components/pages/NewFighter\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Register from \"./components/pages/Register\";\r\nimport NewEvent from \"./components/pages/NewEvent\";\r\nimport AllEvents from \"./components/pages/AllEvents\";\r\nimport MyProfile from \"./components/pages/MyProfile\";\r\nimport UpcomingEventsAndFights from \"./components/pages/UpcomingEventsAndFights\";\r\nimport PastEventsAndFights from \"./components/pages/PastEventsAndFights\";\r\nimport PastFightList from \"./components/eventAndFight/PastFightList\";\r\nimport AddResultsForFightsList from \"./components/results/AddResultsForFightsList\";\r\nimport AddBet from \"./components/bets/AddBet\";\r\nimport MyBets from \"./components/pages/MyBets\";\r\nimport Prezime from \"./components/pages/Prezime\";\r\nimport Web3 from \"web3\";\r\nimport InactiveUsers from \"./components/users/InactiveUsers\";\r\n\r\nfunction App() {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const content = await response.json();\r\n      console.log(\"IDE CONTENT\", content);\r\n      setId(content.id);\r\n      setName(content.name);\r\n      setUser(content);\r\n    })();\r\n  }, [name]);\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(\"APP\", window.contract);\r\n    console.log(\"APP METHODS \", window.contract.methods);\r\n    let balanceOfMe = await window.contract.methods\r\n      .balanceOf(\"0x7f78c74b3C360d9452E94051C302e491A042024f\")\r\n      .call();\r\n    console.log(\"Balance u APP \", balanceOfMe);\r\n    console.log(\"USAO U LOAD\");\r\n  }\r\n\r\n  load(this);\r\n\r\n  function updateUserStateHandler(event) {\r\n    console.log(event.target.value);\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Layout id={id} setId={setId} name={name} setName={setName}>\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact>\r\n            <Home name={name} />\r\n          </Route> */}\r\n          <Route path=\"/all-fighters\">\r\n            <AllFighters />\r\n          </Route>\r\n          <Route path=\"/new-fighter\">\r\n            <NewFighter />\r\n          </Route>\r\n          <Route path=\"/prezime\">\r\n            <Prezime />\r\n          </Route>\r\n          <Route path=\"/inactive-users\">\r\n            <InactiveUsers />\r\n          </Route>\r\n          <Route path=\"/past-fight-list\">\r\n            <PastFightList />\r\n          </Route>\r\n          <Route path=\"/add-results-for-fights-list\">\r\n            <AddResultsForFightsList />\r\n          </Route>\r\n          <Route path=\"/add-bet\">\r\n            <AddBet user={user} />\r\n          </Route>\r\n          <Route path=\"/my-bets\">\r\n            <MyBets user={user} />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <UpcomingEventsAndFights />\r\n          </Route>\r\n          <Route path=\"/past-events-and-fights\">\r\n            <PastEventsAndFights />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login id={id} setId={setId} name={name} setName={setName} />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route path=\"/my-profile\">\r\n            <MyProfile user={user} changeUser={updateUserStateHandler} />\r\n          </Route>\r\n          <Route path=\"/new-event\">\r\n            <NewEvent />\r\n          </Route>\r\n          <Route path=\"/all-events\">\r\n            <AllEvents />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["277","278"],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\layout\\Layout.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\AllFighters.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Home.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Login.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewFighter.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Register.js",["279","280"],"import { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./Register.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport { useState } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction Register() {\r\n  const history = useHistory();\r\n\r\n  const nameInputRef = useRef(\"\");\r\n  const surnameInputRef = useRef(\"\");\r\n  const emailInputRef = useRef(\"\");\r\n  const walletAddressInputRef = useRef(\"\");\r\n  const usernameInputRef = useRef(\"\");\r\n  const passwordInputRef = useRef(\"\");\r\n  const confirmPasswordInputRef = useRef(\"\");\r\n\r\n  const [isFirstUser, setIsFirstUser] = useState(\"\");\r\n\r\n  axios({\r\n    method: \"get\",\r\n    url: \"api/users/first\",\r\n  }).then((response) => {\r\n    console.log(response.data);\r\n    setIsFirstUser(response.data);\r\n  });\r\n\r\n  console.log(\"isFirstUser\", isFirstUser);\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(\"APP\", window.contract);\r\n    console.log(\"APP METHODS \", window.contract.methods);\r\n    let balanceOfMe = await window.contract.methods\r\n      .balanceOf(\"0x7f78c74b3C360d9452E94051C302e491A042024f\")\r\n      .call();\r\n    console.log(\"Balance u APP \", balanceOfMe);\r\n    console.log(\"USAO U LOAD\");\r\n  }\r\n\r\n  load(this);\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredSurname = surnameInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    let enteredWalletAddress = \"\";\r\n    if (isFirstUser === \"yes\") {\r\n      enteredWalletAddress = \"0x7f78c74b3C360d9452E94051C302e491A042024f\";\r\n    } else {\r\n      enteredWalletAddress = walletAddressInputRef.current.value;\r\n    }\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const enteredConfirmPassword = confirmPasswordInputRef.current.value;\r\n    console.log(\r\n      enteredName,\r\n      enteredSurname,\r\n      enteredEmail,\r\n      enteredWalletAddress,\r\n      enteredUsername,\r\n      enteredPassword\r\n    );\r\n\r\n    // if (enteredWalletAddress[0] !== \"0\" || enteredWalletAddress[1] !== \"x\") {\r\n    //   throw \"Not a valid wallet address\";\r\n    // }\r\n\r\n    // if (enteredWalletAddress.length !== 42) {\r\n    //   throw \"Not a valid wallet addresssss\"; //MOZES STAVITI DA POKUSA DA UZME BALANS PA AKO NE POSTOJI BACI ERROR UMESTO OVA DVA SRANJA OD ZASTITE\r\n    // }\r\n\r\n    let isValidWalletAddress = true;\r\n    checkWalletAddress();\r\n\r\n    async function checkWalletAddress() {\r\n      try {\r\n        await window.contract.methods.balanceOf(enteredWalletAddress).call();\r\n      } catch {\r\n        isValidWalletAddress = false;\r\n        console.log(\"Not a valid address\");\r\n        throw \"Not a valid wallet address\";\r\n      }\r\n    }\r\n\r\n    // const responses = await fetch('http://127.0.0.1:8000/api/register', {\r\n    //     method: 'POST',\r\n    //     headers: {'Content-type': 'application/json'},\r\n    //     body: JSON.stringify({\r\n    //         name,\r\n    //         email,\r\n    //         password\r\n    //     })\r\n    // })\r\n\r\n    // const content = await responses.json();\r\n\r\n    // console.log(content);\r\n\r\n    if (isValidWalletAddress === true) {\r\n      if (enteredPassword === enteredConfirmPassword) {\r\n        axios({\r\n          method: \"post\",\r\n          url: \"api/register\",\r\n          data: {\r\n            name: enteredName,\r\n            surname: enteredSurname,\r\n            email: enteredEmail,\r\n            wallet_address: enteredWalletAddress,\r\n            username: enteredUsername,\r\n            password: enteredPassword,\r\n          },\r\n        }).then((response) => {\r\n          console.log(response);\r\n          console.log(response.data);\r\n          let user = response.data;\r\n          if (user.id === 1) {\r\n            axios({\r\n              method: \"put\",\r\n              url: \"api/user/admin\",\r\n              data: {\r\n                userId: user.id,\r\n              },\r\n            })\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          }\r\n          history.replace(\"/login\");\r\n        });\r\n      } else {\r\n        console.log(\"sifre se ne poklapaju!\");\r\n        throw \"Passwords not matching!\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n          <h1 className=\"h3 mb-3 fw-normal\">Registration</h1>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"name\"\r\n              ref={nameInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Surname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"surname\"\r\n              ref={surnameInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"name@example.com\"\r\n              ref={emailInputRef}\r\n            />\r\n          </div>\r\n          {isFirstUser === \"yes\" ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"floatingInput\">Wallet address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Wallet address\"\r\n                ref={walletAddressInputRef}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"username\"\r\n              ref={usernameInputRef}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingPassword\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingPassword\">Confirm password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm password\"\r\n              ref={confirmPasswordInputRef}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.actions}>\r\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\MyProfile.js",["281","282"],"import { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Web3 from \"web3\";\r\nimport { useState } from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction MyProfile(props) {\r\n\r\n  console.log(\"LOGED USER\", props.user);\r\n\r\n  console.log(\"NAME\", props.user.name);\r\n  console.log(\r\n    \"WALLET ADDRESS \",\r\n    props.user.wallet_address,\r\n    typeof props.user.wallet_address\r\n  );\r\n\r\n  const [id, setId] = useState(null);\r\n  const [name, setName] = useState(null);\r\n  const [surname, setSurname] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n\r\n\r\n  const [walletAddress, setWalletAddress] = useState(\r\n    \"\"\r\n  );\r\n  const [balance, setBalance] = useState(null);\r\n  const [state, setState] = useState({hasError: false});\r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const user = await response.json();\r\n      console.log(\"IDE CONTENT\", user);\r\n      setWalletAddress(user.wallet_address);\r\n      setId(user.id);\r\n      setName(user.name);\r\n      setSurname(user.surname);\r\n      setEmail(user.email);\r\n      setUsername(user.username);\r\n    })();\r\n  }, []);\r\n\r\n  const nameInputRef = useRef(\"\");\r\n  const surnameInputRef = useRef(\"\");\r\n  const emailInputRef = useRef(\"\");\r\n  const walletAddressInputRef = useRef(\"\");\r\n  const usernameInputRef = useRef(\"\");\r\n  const passwordInputRef = useRef(\"\");\r\n  const confirmPasswordInputRef = useRef(\"\");\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredSurname = surnameInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredWalletAddress = walletAddressInputRef.current.value;\r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const enteredConfirmPassword = confirmPasswordInputRef.current.value;\r\n    console.log(\r\n      enteredName,\r\n      enteredSurname,\r\n      enteredEmail,\r\n      enteredWalletAddress,\r\n      enteredUsername,\r\n      enteredPassword\r\n    );\r\n\r\n    axios({\r\n      method: \"put\",\r\n      url: \"users/\" + id + \"/\",\r\n      data: {\r\n        name: enteredName,\r\n        surname: enteredSurname,\r\n        email: enteredEmail,\r\n        wallet_address: enteredWalletAddress,\r\n        username: enteredUsername,\r\n        password: props.user.password,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response);\r\n      console.log(response.data);\r\n      if (response.status === 200) {\r\n        console.log(\"DOBAR\");\r\n        if (\r\n          enteredPassword !== \"\" &&\r\n          enteredPassword === enteredConfirmPassword\r\n        ) {\r\n          console.log(\"MENJAMO SIFRU\");\r\n          axios({\r\n            method: \"put\",\r\n            url: \"api/user/change\",\r\n            data: {\r\n              id: props.user.id,\r\n              password: enteredPassword,\r\n            },\r\n          })\r\n            .then((response) => {\r\n              console.log(response);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // if(window.contract === null) {\r\n  //   console.log(\"JESTE NULL\");\r\n  // } else {\r\n  //   console.log(\"NIJE NULL\");\r\n  // }\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(window.contract);\r\n    console.log(window.contract.methods);\r\n    console.log(\"EVO GA ON \", walletAddress);\r\n    let balanceOfMe = 0;\r\n    try {\r\n    balanceOfMe = await window.contract.methods\r\n      .balanceOf(walletAddress)\r\n      .call();\r\n    } catch {\r\n      console.log(\"Not a valid address\")\r\n    }\r\n    setBalance(balanceOfMe / 100);\r\n    // setStatus(\"Ready!\");\r\n    console.log(\"USAO U LOAD\");\r\n  }\r\n\r\n  if (props.user.wallet_address !== null) {\r\n    load(this);\r\n  }\r\n\r\n\r\n\r\n  console.log(\"BALANS JE \", balance);\r\n  console.log(\"STATE JE \", state);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n          <h1 className=\"h3 mb-3 fw-normal\">Change user data</h1>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"name\"\r\n              ref={nameInputRef}\r\n              // onChange={props.changeUser}\r\n              defaultValue={name}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Surname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"surname\"\r\n              ref={surnameInputRef}\r\n              defaultValue={surname}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"name@example.com\"\r\n              ref={emailInputRef}\r\n              defaultValue={email}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"username\"\r\n              ref={usernameInputRef}\r\n              defaultValue={username}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingInput\">Wallet Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"wallet address\"\r\n              ref={walletAddressInputRef}\r\n              defaultValue={walletAddress}\r\n            />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingPassword\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              ref={passwordInputRef}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingPassword\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm Password\"\r\n              ref={confirmPasswordInputRef}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"floatingPassword\">Amount of PER</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Perper amount\"\r\n              defaultValue={balance}\r\n              readOnly\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.actions}>\r\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\FighterList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\NewFighterForm.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\layout\\MainNavigation.js",["283"],"import axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n// import {useContext} from 'react';\r\n\r\nfunction MainNavigation(props) {\r\n  const logoutFunction = async function () {\r\n    console.log(\"IDE MO MO MO\");\r\n    await fetch(\"http://127.0.0.1:8000/api/logout\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    props.setId(\"\");\r\n    props.setName(\"\");\r\n  };\r\n  let login,\r\n    register,\r\n    logout,\r\n    myProfile,\r\n    addNewFighter,\r\n    myBets,\r\n    inactiveUsers,\r\n    upcomingFights,\r\n    pastFights,\r\n    addNewEvent,\r\n    upcomingEvents;\r\n\r\n  if (!props.id) {\r\n    login = (\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    );\r\n    register = (\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n    );\r\n  } else {\r\n    myProfile = (\r\n      <li>\r\n        <Link to=\"/my-profile\">My profile</Link>\r\n      </li>\r\n    );\r\n    logout = (\r\n      <li onClick={logoutFunction}>\r\n        <Link to=\"/login\">Logout</Link>\r\n      </li>\r\n    );\r\n  }\r\n  if (props.id && props.id !== 1) {\r\n    myBets = (\r\n      <li>\r\n        <Link to=\"/my-bets\">My bets</Link>\r\n      </li>\r\n    );\r\n    upcomingFights = (\r\n      <li>\r\n        <Link to=\"/\">Upcoming fights</Link>\r\n      </li>\r\n    );\r\n  }\r\n  if (props.id === 1) {\r\n    addNewFighter = (\r\n      <li>\r\n        <Link to=\"/new-fighter\">Add new fighter</Link>\r\n      </li>\r\n    );\r\n    inactiveUsers = (\r\n      <li>\r\n        <Link to=\"/inactive-users\">Inactive users</Link>\r\n      </li>\r\n    );\r\n    pastFights = (\r\n      <li>\r\n        <Link to=\"/past-events-and-fights\">Past fights</Link>\r\n      </li>\r\n    );\r\n    addNewEvent = (\r\n      <li>\r\n        <Link to=\"/new-event\">Add new event</Link>\r\n      </li>\r\n    );\r\n    upcomingEvents = (\r\n      <li>\r\n        <Link to=\"/all-events\">Upcoming events</Link>\r\n      </li>\r\n    );\r\n  }\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Diplomski</div>\r\n      <nav>\r\n        <ul>\r\n          {login}\r\n          {register}\r\n          {myProfile}\r\n\r\n          <li>\r\n            <Link to=\"/all-fighters\">All fighters</Link>\r\n          </li>\r\n          {addNewFighter}\r\n          {myBets}\r\n          {inactiveUsers}\r\n          {upcomingFights}\r\n          {pastFights}\r\n          {addNewEvent}\r\n          {upcomingEvents}\r\n          {logout}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\FighterItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\ui\\Card.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewFight.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\FightList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\FightItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fights\\NewFightForm.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\NewEvent.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\AllEvents.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\NewEventForm.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\EventList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\events\\EventItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\fighters\\ImageUpload.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\Prezime.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\EventFights.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\UpcomingEventsAndFights.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\EventAndFightList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\EventAndFightItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\FightForEvent.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\PastEventsAndFights.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastEventAndFightList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastEventAndFightItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\eventAndFight\\PastFightList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\results\\AddResultsForFightsList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\results\\AddResultsForFightsItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\AddBet.js",["284"],"import classes from \"./AddBet.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction AddBet(props) {\r\n  const location = useLocation();\r\n  console.log(\"LOCATION \", location.state);\r\n\r\n  const history = useHistory();\r\n\r\n  console.log(\"USER U ADD BET \", props.user);\r\n\r\n  const stakeInputRef = useRef();\r\n\r\n  const [adminWalletAddress, setAdminWalletAddress] = useState(\"\");\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [balance, setBalance] = useState(null);\r\n\r\n  const [selectedOptionWinner, setSelectedOptionWinner] = useState(null);\r\n\r\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\r\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\r\n\r\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\r\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\r\n    useState(null);\r\n\r\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\r\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\r\n\r\n  const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\r\n  const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\r\n\r\n  const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\r\n  const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\r\n\r\n  const [redCornerFighterAge, setRedCornerFighterAge] = useState(null);\r\n  const [blueCornerFighterAge, setBlueCornerFighterAge] = useState(null);\r\n\r\n  const [redCornerFighterHeight, setRedCornerFighterHeight] = useState(null);\r\n  const [blueCornerFighterHeight, setBlueCornerFighterHeight] = useState(null);\r\n\r\n  const [redCornerFighterWeight, setRedCornerFighteWeight] = useState(null);\r\n  const [blueCornerFighterWeight, setBlueCornerFighterWeight] = useState(null);\r\n\r\n  const [redCornerFighterReach, setRedCornerFighterReach] = useState(null);\r\n  const [blueCornerFighterReach, setBlueCornerFighterReach] = useState(null);\r\n\r\n  const [loadedFighters, setLoadedFighters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const content = await response.json();\r\n      console.log(\"IDE CONTENT\", content);\r\n      setWalletAddress(content.wallet_address);\r\n    })();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/admin\",\r\n    }).then((response) => {\r\n      console.log(\"API ADMIN \", response.data);\r\n      let admin = response.data;\r\n      setAdminWalletAddress(admin.wallet_address);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + location.state.blueCornerFighterId,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      let blueFighter = response.data;\r\n      setBlueCornerFighterName(blueFighter.name);\r\n      setBlueCornerFighterSurname(blueFighter.surname);\r\n      setBlueCornerFighterImg(blueFighter.image);\r\n      setBlueCornerFighterWins(blueFighter.wins);\r\n      setBlueCornerFighterLosses(blueFighter.losses);\r\n      setBlueCornerFighterAge(blueFighter.age);\r\n      setBlueCornerFighterHeight(blueFighter.height);\r\n      setBlueCornerFighterWeight(blueFighter.weight);\r\n      setBlueCornerFighterReach(blueFighter.reach);\r\n      loadedFighters.push({\r\n        value: blueFighter.id,\r\n        label: blueFighter.name + \" \" + blueFighter.surname,\r\n      });\r\n      console.log(setLoadedFighters);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + location.state.redCornerFighterId,\r\n    }).then((response) => {\r\n      let redFighter = response.data;\r\n      setRedCornerFighterName(redFighter.name);\r\n      setRedCornerFighterSurname(redFighter.surname);\r\n      setRedCornerFighterImg(redFighter.image);\r\n      setRedCornerFighterWins(redFighter.wins);\r\n      setRedCornerFighterLosses(redFighter.losses);\r\n      setRedCornerFighterAge(redFighter.age);\r\n      setRedCornerFighterHeight(redFighter.height);\r\n      setRedCornerFighteWeight(redFighter.weight);\r\n      setRedCornerFighterReach(redFighter.reach);\r\n      loadedFighters.push({\r\n        value: redFighter.id,\r\n        label: redFighter.name + \" \" + redFighter.surname,\r\n      });\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(window.contract);\r\n    console.log(window.contract.methods);\r\n    console.log(\"EVO GA ON \", walletAddress);\r\n    let balanceOfMe = 0;\r\n    try {\r\n      balanceOfMe = await window.contract.methods\r\n        .balanceOf(walletAddress)\r\n        .call();\r\n    } catch {\r\n      console.log(\"Not a valid address\");\r\n    }\r\n    setBalance(balanceOfMe / 100);\r\n    // setStatus(\"Ready!\");\r\n    console.log(\"USAO U LOAD\");\r\n  }\r\n\r\n  if (props.user.wallet_address !== null) {\r\n    load(this);\r\n  }\r\n\r\n  console.log(\"WALLET ADDRESS U ADDBET\", walletAddress);\r\n  console.log(\"BALANCE U ADDBET \", balance);\r\n\r\n  async function makeABet() {\r\n    console.log(\"window contract ide gasic\", window.contract.methods);\r\n    if (stakeInputRef.current.value === \"\" || selectedOptionWinner === null) {\r\n      console.log(\"alo nisi uneo ulog i pobednika\");\r\n      throw \"Fill up all the fields in the form!\";\r\n    // } \r\n    // else if (stakeInputRef.current.value > props.user.coins) {\r\n      // console.log(\"nemas dovoljno coin-a gari\");\r\n      // throw \"You don't have enough Perpers for transaction\";\r\n    } else {\r\n      console.log(\"fight \", location.state.fightId);\r\n      console.log(\"predicted_winner \", selectedOptionWinner.value);\r\n      console.log(\"stake \", stakeInputRef.current.value);\r\n      let transferSuccess;\r\n      try {\r\n        transferSuccess = await window.contract.methods\r\n          .transfer(\r\n            adminWalletAddress,\r\n            stakeInputRef.current.value * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\r\n          )\r\n          .send({ from: walletAddress });\r\n      } catch {\r\n        console.log(\"Transaction failed!\");\r\n      }\r\n      console.log(transferSuccess);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"bets/\",\r\n        data: {\r\n          fight: location.state.fightId,\r\n          predicted_winner: selectedOptionWinner.value,\r\n          stake: stakeInputRef.current.value,\r\n          user: props.user.id,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response);\r\n          console.log(response.data);\r\n          history.replace(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className={classes.content}>\r\n        <h2>\r\n          {redCornerFighterName} {redCornerFighterSurname} vs{\" \"}\r\n          {blueCornerFighterName} {blueCornerFighterSurname}\r\n        </h2>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <img\r\n          src={redCornerFighterImg}\r\n          alt=\"slika borca\"\r\n          height=\"200\"\r\n          width=\"200\"\r\n        ></img>{\" \"}\r\n        vs{\" \"}\r\n        <img\r\n          src={blueCornerFighterImg}\r\n          alt=\"slika borca\"\r\n          height=\"200\"\r\n          width=\"200\"\r\n        ></img>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>\r\n          {redCornerFighterWins}W : {redCornerFighterLosses}L\r\n        </div>\r\n        <div className={classes.atribute}><b>Record</b></div>\r\n        <div className={classes.blue}>\r\n          {blueCornerFighterWins}W : {blueCornerFighterLosses}L\r\n        </div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterAge}</div>\r\n        <div className={classes.atribute}><b>Age</b></div>\r\n        <div className={classes.blue}>{blueCornerFighterAge}</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterHeight}cm</div>\r\n        <div className={classes.atribute}><b>Height</b></div>\r\n        <div className={classes.blue}>{blueCornerFighterHeight}cm</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterWeight}kg</div>\r\n        <div className={classes.atribute}><b>Weight</b></div>\r\n        <div className={classes.blue}>{blueCornerFighterWeight}kg</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterReach}cm</div>\r\n        <div className={classes.atribute}><b>Reach</b></div>\r\n        <div className={classes.blue}>{blueCornerFighterReach}cm</div>\r\n      </div>\r\n\r\n      <div className={classes.form}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"redCornerFighter\">Winner prediction</label>\r\n          <div>\r\n            <Select\r\n              defaultValue={selectedOptionWinner}\r\n              onChange={setSelectedOptionWinner}\r\n              options={loadedFighters}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"age\">Amount of PER to bet</label>\r\n          <input type=\"number\" required id=\"stake\" ref={stakeInputRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button onClick={makeABet}>Make a bet</button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AddBet;\r\n","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\pages\\MyBets.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\BetList.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\bets\\BetItem.js",[],"G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\users\\InactiveUsers.js",["285"],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InactiveUserItem from \"./InactiveUserItem\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./InactiveUsers.module.css\";\r\nimport { useCallback } from 'react-router-dom';\r\n\r\nfunction InactiveUsers() {\r\n  const [inactiveUsers, setInactiveUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/api/users/inactive\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"INACTIVE USERI \", response.data);\r\n        let inactiveUsers = response.data;\r\n        setInactiveUsers(inactiveUsers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const newInactiveUsersHandler = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/api/users/inactive\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"INACTIVE USERI \", response.data);\r\n        let inactiveUsers = response.data;\r\n        setInactiveUsers(inactiveUsers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <div className={classes.content}>\r\n          <h1>Inactive users</h1>\r\n          <ul>\r\n            {inactiveUsers.map((user) => (\r\n              <InactiveUserItem\r\n                key={user.id}\r\n                id={user.id}\r\n                name={user.name}\r\n                surname={user.surname}\r\n                wallet_address={user.wallet_address}\r\n                newInactiveUsers={newInactiveUsersHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InactiveUsers;\r\n","G:\\FAKS PREDMETI\\diplomskii\\ISA\\reactapp\\src\\components\\users\\InactiveUserItem.js",["286","287"],"import classes from \"./InactiveUserItem.module.css\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction InactiveUserItem(props) {\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [adminWalletAddress, setAdminWalletAddress] = useState(\"\");\r\n\r\n  console.log(\"PROPS InactiveUserItem \", props);\r\n  console.log(props.id);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/admin\",\r\n    }).then((response) => {\r\n      console.log(\"API ADMIN INACTIVE USER ITEM \", response.data);\r\n      let admin = response.data;\r\n      setAdminWalletAddress(admin.wallet_address);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(window.contract);\r\n    console.log(window.contract.methods);\r\n    console.log(\"USAO U LOAD u ADD RESULTS FOR FIGHTS LIST\");\r\n  }\r\n\r\n  load(this);\r\n\r\n  //   const makeUserActive = () => {\r\n  //       axios({\r\n  //           method: 'put',\r\n  //           url: 'api/user/active',\r\n  //           data: {\r\n  //               userId: props.id\r\n  //           }.then(response => {\r\n  //               console.log(response.data);\r\n  //               user = response.data;\r\n\r\n  //           })\r\n  //       })\r\n  //   }\r\n\r\n  async function makeUserActive() {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user/active\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        method: \"put\",\r\n        body: JSON.stringify({\r\n            userId: props.id\r\n        }),\r\n      });\r\n      const user = await response.json();\r\n      console.log(\"USER U INACTIVE \", user);\r\n      let transferSuccess;\r\n        try {\r\n          transferSuccess = await window.contract.methods\r\n            .transfer(\r\n              user.wallet_address,\r\n              100 * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\r\n            )\r\n            .send({ from: adminWalletAddress });\r\n        } catch {\r\n          console.log(\"Transaction failed!\");\r\n        }\r\n        console.log(transferSuccess);\r\n      }\r\n    )();\r\n    props.newInactiveUsers();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className={classes.fight}>\r\n          {/* <div className={classes.actions}> */}\r\n          <div>\r\n            {props.name} {props.surname}\r\n          </div>\r\n          <div>\r\n            <button onClick={makeUserActive}>Make User Active</button>\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InactiveUserItem;\r\n",{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":18},{"ruleId":"292","severity":1,"message":"296","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":12},{"ruleId":"288","replacedBy":"297"},{"ruleId":"290","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":326,"column":9,"nodeType":"301","messageId":"302","endLine":326,"endColumn":44},{"ruleId":"299","severity":1,"message":"300","line":380,"column":9,"nodeType":"301","messageId":"302","endLine":380,"endColumn":41},{"ruleId":"292","severity":1,"message":"303","line":31,"column":10,"nodeType":"294","messageId":"295","endLine":31,"endColumn":15},{"ruleId":"292","severity":1,"message":"304","line":31,"column":17,"nodeType":"294","messageId":"295","endLine":31,"endColumn":25},{"ruleId":"292","severity":1,"message":"305","line":1,"column":8,"nodeType":"294","messageId":"295","endLine":1,"endColumn":13},{"ruleId":"299","severity":1,"message":"300","line":397,"column":7,"nodeType":"301","messageId":"302","endLine":397,"endColumn":51},{"ruleId":"292","severity":1,"message":"306","line":6,"column":10,"nodeType":"294","messageId":"295","endLine":6,"endColumn":21},{"ruleId":"292","severity":1,"message":"307","line":8,"column":9,"nodeType":"294","messageId":"295","endLine":8,"endColumn":16},{"ruleId":"292","severity":1,"message":"308","line":10,"column":21,"nodeType":"294","messageId":"295","endLine":10,"endColumn":33},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.",["309"],["310"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'axios' is defined but never used.","'useCallback' is defined but never used.","'history' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]