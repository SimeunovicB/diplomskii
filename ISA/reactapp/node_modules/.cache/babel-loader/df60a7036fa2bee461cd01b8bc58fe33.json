{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\eventAndFight\\\\FightForEvent.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./FightForEvent.module.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FightForEvent(props) {\n  _s();\n\n  const history = useHistory();\n  const [isLoadingRed, setIsLoadingRed] = useState(false);\n  const [isLoadingBlue, setIsLoadingBlue] = useState(false);\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\n  console.log(\"PROPS \", props.id, props.redCornerFighter, props.blueCornerFighter, props.redCornerOdds);\n  useEffect(() => {\n    setIsLoadingRed(true);\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setRedCornerFighter(fighter);\n      setIsLoadingRed(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setIsLoadingBlue(true);\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setBlueCornerFighter(fighter);\n      setIsLoadingBlue(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const makeABetHandler = () => {\n    console.log(\"zivot je igra\");\n    console.log(\"fight id \", props.id);\n    history.push(\"/add-bet\", {\n      fightId: props.id,\n      redCornerFighterId: props.redCornerFighter,\n      blueCornerFighter: props.blueCornerFighter,\n      redCornerOdds: props.redCornerOdds\n    });\n  };\n\n  const istina = true;\n\n  if (istina) {\n    console.log(\"idemo gas\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoadingRed || isLoadingBlue ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fight,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [redCornerFighter.name, \" \", redCornerFighter.surname, \" vs\", \" \", blueCornerFighter.name, \" \", blueCornerFighter.surname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: makeABetHandler,\n          children: \"Bet on fight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FightForEvent, \"coZRCiqATopz4ey4wSnSqYsykjM=\", false, function () {\n  return [useHistory];\n});\n\n_c = FightForEvent;\nexport default FightForEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightForEvent\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/eventAndFight/FightForEvent.js"],"names":["classes","axios","useState","useEffect","useHistory","FightForEvent","props","history","isLoadingRed","setIsLoadingRed","isLoadingBlue","setIsLoadingBlue","redCornerFighter","setRedCornerFighter","blueCornerFighter","setBlueCornerFighter","console","log","id","redCornerOdds","method","url","then","response","fighter","data","catch","error","makeABetHandler","push","fightId","redCornerFighterId","istina","fight","name","surname"],"mappings":"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","sourcesContent":["import classes from \"./FightForEvent.module.css\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction FightForEvent(props) {\r\n\r\n  const history = useHistory();\r\n\r\n  const [isLoadingRed, setIsLoadingRed] = useState(false);\r\n  const [isLoadingBlue, setIsLoadingBlue] = useState(false);\r\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\r\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\r\n\r\n  console.log(\r\n    \"PROPS \",\r\n    props.id,\r\n    props.redCornerFighter,\r\n    props.blueCornerFighter,\r\n    props.redCornerOdds\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoadingRed(true);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setRedCornerFighter(fighter);\r\n        setIsLoadingRed(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsLoadingBlue(true);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setBlueCornerFighter(fighter);\r\n        setIsLoadingBlue(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const makeABetHandler = () => {\r\n    console.log(\"zivot je igra\")\r\n    console.log(\"fight id \", props.id);\r\n    history.push(\"/add-bet\", {fightId: props.id, redCornerFighterId: props.redCornerFighter, blueCornerFighter: props.blueCornerFighter, redCornerOdds: props.redCornerOdds})\r\n  }\r\n\r\n  const istina = true;\r\n  if (istina) {\r\n    console.log(\"idemo gas\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoadingRed || isLoadingBlue ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className={classes.fight}>\r\n          {/* <div className={classes.actions}> */}\r\n          <div>\r\n            {redCornerFighter.name} {redCornerFighter.surname} vs{\" \"}\r\n            {blueCornerFighter.name} {blueCornerFighter.surname}\r\n          </div>\r\n          <div>\r\n            <button onClick={makeABetHandler}>Bet on fight</button>\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FightForEvent;\r\n"]},"metadata":{},"sourceType":"module"}