{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\events\\\\EventList.js\",\n    _s = $RefreshSig$();\n\nimport EventItem from \"./EventItem\";\nimport classes from \"./EventList.module.css\";\nimport { useState } from \"react\";\nimport NewFight from \"../pages/NewFight\";\nimport AllFights from \"../pages/AllFights\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventList(props) {\n  _s();\n\n  const [addFightForEvent, setAddFightForEvent] = useState(false);\n  const [viewFightsForEvent, setViewFightsForEvent] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(\"\");\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\n\n  const newFightSelectEventHandler = (eventId, eventName) => {\n    console.log(\"Id eventa je\", eventId);\n    setSelectedEventId(eventId);\n    setSelectedEventName(eventName);\n    setAddFightForEvent(true);\n  };\n\n  const showFightsSelectEventHandler = (eventId, eventName) => {\n    setSelectedEventId(eventId);\n    setSelectedEventName(eventName);\n    setViewFightsForEvent(true);\n  };\n\n  const goBackToEventsFromNewFightHandler = () => {\n    console.log(\"Dje ces\");\n    setAddFightForEvent(false);\n  };\n\n  const goBackToEventsFromAllFightsHandler = () => {\n    setViewFightsForEvent(false);\n  };\n\n  const addFightDoneHandler = eventId => {\n    setAddFightForEvent(false);\n    showFightsSelectEventHandler(eventId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: addFightForEvent === false && viewFightsForEvent === false ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.events.map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n        id: event.id,\n        name: event.name,\n        newFightSelectEvent: newFightSelectEventHandler,\n        showFightsSelectEvent: showFightsSelectEventHandler\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : addFightForEvent === true && viewFightsForEvent === false ? /*#__PURE__*/_jsxDEV(NewFight, {\n      eventId: selectedEventId,\n      eventName: selectedEventName,\n      goBackToEvents: goBackToEventsFromNewFightHandler,\n      addFightDone: addFightDoneHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : addFightForEvent === false && viewFightsForEvent === true ? /*#__PURE__*/_jsxDEV(AllFights, {\n      eventId: selectedEventId,\n      eventName: selectedEventName,\n      goBackToEvents: goBackToEventsFromAllFightsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventList, \"5EIQkitlTjqomN4UPzDmAn3zqys=\");\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/events/EventList.js"],"names":["EventItem","classes","useState","NewFight","AllFights","EventList","props","addFightForEvent","setAddFightForEvent","viewFightsForEvent","setViewFightsForEvent","selectedEventId","setSelectedEventId","selectedEventName","setSelectedEventName","newFightSelectEventHandler","eventId","eventName","console","log","showFightsSelectEventHandler","goBackToEventsFromNewFightHandler","goBackToEventsFromAllFightsHandler","addFightDoneHandler","list","events","map","event","id","name"],"mappings":"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","sourcesContent":["import EventItem from \"./EventItem\";\r\nimport classes from \"./EventList.module.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport NewFight from \"../pages/NewFight\";\r\nimport AllFights from \"../pages/AllFights\";\r\n\r\nfunction EventList(props) {\r\n  const [addFightForEvent, setAddFightForEvent] = useState(false);\r\n  const [viewFightsForEvent, setViewFightsForEvent] = useState(false);\r\n  const [selectedEventId, setSelectedEventId] = useState(\"\");\r\n  const [selectedEventName, setSelectedEventName] = useState(\"\");\r\n\r\n  const newFightSelectEventHandler = (eventId, eventName) => {\r\n    console.log(\"Id eventa je\", eventId);\r\n    setSelectedEventId(eventId);\r\n    setSelectedEventName(eventName);\r\n    setAddFightForEvent(true);\r\n  };\r\n\r\n  const showFightsSelectEventHandler = (eventId, eventName) => {\r\n    setSelectedEventId(eventId);\r\n    setSelectedEventName(eventName);\r\n    setViewFightsForEvent(true);\r\n  }\r\n\r\n  const goBackToEventsFromNewFightHandler = () => {\r\n    console.log(\"Dje ces\");\r\n    setAddFightForEvent(false);\r\n  };\r\n\r\n  const goBackToEventsFromAllFightsHandler = () => {\r\n    setViewFightsForEvent(false);\r\n  };\r\n\r\n  const addFightDoneHandler = (eventId) => {\r\n    setAddFightForEvent(false);\r\n    showFightsSelectEventHandler(eventId);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {addFightForEvent === false && viewFightsForEvent === false ? (\r\n        <ul className={classes.list}>\r\n          {props.events.map((event) => (\r\n            <EventItem\r\n              key={event.id}\r\n              id={event.id}\r\n              name={event.name}\r\n              newFightSelectEvent={newFightSelectEventHandler}\r\n              showFightsSelectEvent={showFightsSelectEventHandler}\r\n            />\r\n          ))}\r\n        </ul>\r\n      ) : addFightForEvent === true && viewFightsForEvent === false ? (\r\n        <NewFight\r\n          eventId={selectedEventId}\r\n          eventName={selectedEventName}\r\n          goBackToEvents={goBackToEventsFromNewFightHandler}\r\n          addFightDone={addFightDoneHandler}\r\n        />\r\n      ) : addFightForEvent === false && viewFightsForEvent === true ? (\r\n        <AllFights\r\n          eventId={selectedEventId}\r\n          eventName={selectedEventName}\r\n          goBackToEvents={goBackToEventsFromAllFightsHandler}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default EventList;\r\n"]},"metadata":{},"sourceType":"module"}