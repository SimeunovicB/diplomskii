{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\fights\\\\NewFightForm.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../ui/Card\";\nimport classes from \"./NewFightForm.module.css\";\nimport { useRef } from \"react\";\nimport Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFightForm(props) {\n  _s();\n\n  const methodInputRef = useRef();\n  const [loadedFighters, setLoadedFighters] = useState([]);\n  console.log(\"PROBA\");\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fighters\"\n    }).then(response => {\n      let fighters = response.data;\n      let ret = [];\n      console.log(\"FAJTERI\", fighters);\n\n      for (let i in fighters) {\n        // console.log(fighters[i]);\n        ret.push(fighters[i]);\n      }\n\n      console.log(\"RET\", ret);\n\n      if (fighters === ret) {\n        console.log(\"ISTO\");\n      } else {\n        console.log(\"NIJE ISTO\");\n      }\n\n      setIsLoading(false);\n      setLoadedFighters(ret); // console.log(\"LOADED\",loadedFighters);\n    });\n  }, []);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const enteredMethod = methodInputRef.current.value;\n    const fighterData = {\n      id: 3,\n      name: \"Simeun\"\n    };\n    const fightData = {\n      method: enteredMethod,\n      redCornerFighter: fighterData\n    };\n    console.log(fightData);\n    props.onAddFight(fightData);\n  }\n\n  const options = [{\n    value: \"chocolate\",\n    label: \"Chocolate\"\n  }, {\n    value: \"strawberry\",\n    label: \"Strawberry\"\n  }, {\n    value: \"vanilla\",\n    label: \"Vanilla\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"method\",\n          children: \"Fight Finish Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"method\",\n          ref: methodInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"redCornerFighter\",\n          children: \"Red corner fighter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Fight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewFightForm, \"n5R+SPtX2ZR52Ni3m2MfwXHrvlo=\");\n\n_c = NewFightForm;\nexport default NewFightForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFightForm\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/fights/NewFightForm.js"],"names":["Card","classes","useRef","Select","useState","useEffect","axios","NewFightForm","props","methodInputRef","loadedFighters","setLoadedFighters","console","log","method","url","then","response","fighters","data","ret","i","push","setIsLoading","submitHandler","event","preventDefault","enteredMethod","current","value","fighterData","id","name","fightData","redCornerFighter","onAddFight","options","label","form","control","actions"],"mappings":"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","sourcesContent":["import Card from \"../ui/Card\";\r\nimport classes from \"./NewFightForm.module.css\";\r\nimport { useRef } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction NewFightForm(props) {\r\n  const methodInputRef = useRef();\r\n\r\n  const [loadedFighters, setLoadedFighters] = useState([]);\r\n\r\n  console.log(\"PROBA\");\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters\",\r\n    }).then((response) => {\r\n      let fighters = response.data;\r\n      let ret = [];\r\n      console.log(\"FAJTERI\", fighters);\r\n      for (let i in fighters) {\r\n        // console.log(fighters[i]);\r\n        ret.push(fighters[i]);\r\n      }\r\n      console.log(\"RET\", ret);\r\n      if (fighters === ret) {\r\n        console.log(\"ISTO\");\r\n      } else {\r\n        console.log(\"NIJE ISTO\");\r\n      }\r\n      setIsLoading(false);\r\n      setLoadedFighters(ret);\r\n      // console.log(\"LOADED\",loadedFighters);\r\n    });\r\n  }, []);\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const enteredMethod = methodInputRef.current.value;\r\n\r\n    const fighterData = {\r\n      id: 3,\r\n      name: \"Simeun\",\r\n    };\r\n\r\n    const fightData = {\r\n      method: enteredMethod,\r\n      redCornerFighter: fighterData,\r\n    };\r\n\r\n    console.log(fightData);\r\n    props.onAddFight(fightData);\r\n  }\r\n\r\n  const options = [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"method\">Fight Finish Method</label>\r\n          <input type=\"text\" required id=\"method\" ref={methodInputRef} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"redCornerFighter\">Red corner fighter</label>\r\n          <Select options={options} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>Add Fight</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\nexport default NewFightForm;\r\n"]},"metadata":{},"sourceType":"module"}