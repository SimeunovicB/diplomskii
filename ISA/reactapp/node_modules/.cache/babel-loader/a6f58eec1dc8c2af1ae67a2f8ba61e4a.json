{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\results\\\\AddResultsForFightsList.js\",\n    _s = $RefreshSig$();\n\n// import FightItem from \"./FightItem\";\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\nimport classes from \"./AddResultsForFightsList.module.css\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../ui/Card\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddResultsForFightsList() {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  console.log(location.state.eventId);\n  const [fights, setFights] = useState([]); // const [walletAddressAndPrizeMap, setWalletAddressAndPrizeMap] = useState([]);\n\n  const fightsResults = new Map(); // fightsResults.set(\"a\", [1,13]);\n  // fightsResults.set(\"b\", [2,18]);\n  // fightsResults.set(\"c\", [3,-4]);\n\n  let returnFightIds = [];\n  let returnWinnerIds = [];\n  let returnMethods = [];\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"api/fights/event?eventId=\" + location.state.eventId\n    }).then(response => {\n      console.log(response);\n      console.log(response.data);\n      const fights = response.data;\n      setFights(fights);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      window.ethereum.enable();\n      console.log(\"USAO U IF\");\n    }\n\n    console.log(\"USAO U loadWeb3\");\n  }\n\n  async function loadContract() {\n    console.log(\"VERZIJA WEB3\");\n    console.log(window.web3.version);\n    return await new window.web3.eth.Contract([{\n      constant: true,\n      inputs: [],\n      name: \"name\",\n      outputs: [{\n        name: \"\",\n        type: \"string\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_spender\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"approve\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [{\n        name: \"\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_from\",\n        type: \"address\"\n      }, {\n        name: \"_to\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"transferFrom\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"decimals\",\n      outputs: [{\n        name: \"\",\n        type: \"uint8\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [{\n        name: \"_owner\",\n        type: \"address\"\n      }],\n      name: \"balanceOf\",\n      outputs: [{\n        name: \"balance\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"symbol\",\n      outputs: [{\n        name: \"\",\n        type: \"string\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_to\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"transfer\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [{\n        name: \"_owner\",\n        type: \"address\"\n      }, {\n        name: \"_spender\",\n        type: \"address\"\n      }],\n      name: \"allowance\",\n      outputs: [{\n        name: \"\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"fallback\"\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      }, {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      }, {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }],\n      name: \"Approval\",\n      type: \"event\"\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      }, {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      }, {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }],\n      name: \"Transfer\",\n      type: \"event\"\n    }], \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\");\n  }\n\n  async function load() {\n    console.log(\"EVO GA\");\n    await loadWeb3();\n    window.contract = await loadContract();\n    console.log(window.contract);\n    console.log(window.contract.methods);\n    console.log(\"USAO U LOAD\");\n  }\n\n  load(this);\n\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\n    console.log(\"changeResultsHandler\");\n    console.log(\"FIGHT ID \", fightId);\n    console.log(\"WINNER ID \", winnerId);\n    console.log(\"WINNING METHOD \", winningMethod);\n    fightsResults.set(fightId, [winnerId, winningMethod]);\n  };\n\n  async function submitHandler() {\n    console.log(\"ide gas\");\n    let walletAddressAndPrizeMap;\n\n    function logMapElements(value, key) {\n      returnFightIds.push(key);\n      returnWinnerIds.push(value[0]);\n      returnMethods.push(value[1]);\n    }\n\n    fightsResults.forEach(logMapElements);\n    console.log(returnFightIds);\n    console.log(returnWinnerIds);\n    console.log(returnMethods);\n    axios({\n      method: \"put\",\n      url: \"api/results/event\",\n      data: {\n        fightIds: returnFightIds,\n        winnerIds: returnWinnerIds,\n        methods: returnMethods\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(\"jesam tu sam\");\n      let map = response.data; //key = walletAddress, value = amount of coins to add\n\n      console.log(map);\n      console.log(\"TIP MAPE \", typeof map);\n      walletAddressAndPrizeMap = map; // setWalletAddressAndPrizeMap(map);\n      //\n      // console.log(mapa['a'])\n      // console.log(mapa[1])\n    }).catch(error => {\n      console.log(error);\n    });\n    let transferSuccess;\n\n    for (let [key, value] of walletAddressAndPrizeMap) {\n      console.log(\"in \" + key + \" add \" + value);\n      console.log(\"TIP \", typeof value); // if(value !== 0) {\n\n      try {\n        transferSuccess = await window.contract.methods.transfer(key, value * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\n        ).send({\n          from: \"0x7f78c74b3C360d9452E94051C302e491A042024f\"\n        });\n      } catch {\n        console.log(\"Transaction failed!\");\n      }\n\n      console.log(transferSuccess); // }\n    }\n\n    history.replace(\"/past-events-and-fights\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: location.state.eventName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.list,\n          children: fights.map(fight => /*#__PURE__*/_jsxDEV(AddResultsForFightsItem, {\n            id: fight.id,\n            redCornerFighter: fight.redCornerFighter,\n            blueCornerFighter: fight.blueCornerFighter,\n            redCornerOdds: fight.redCornerOdds,\n            event: fight.event,\n            changeResults: changeResultsHandler\n          }, fight.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitHandler,\n            children: \"Add result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddResultsForFightsList, \"h+H9FDRJKV5sNQqvwkl1HYUsQXU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = AddResultsForFightsList;\nexport default AddResultsForFightsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddResultsForFightsList\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/results/AddResultsForFightsList.js"],"names":["AddResultsForFightsItem","classes","useLocation","useHistory","useState","useEffect","axios","Card","Web3","AddResultsForFightsList","location","history","console","log","state","eventId","fights","setFights","fightsResults","Map","returnFightIds","returnWinnerIds","returnMethods","method","url","then","response","data","catch","error","loadWeb3","window","ethereum","web3","enable","loadContract","version","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","load","contract","methods","changeResultsHandler","fightId","winnerId","winningMethod","set","submitHandler","walletAddressAndPrizeMap","logMapElements","value","key","push","forEach","fightIds","winnerIds","map","transferSuccess","transfer","send","from","replace","form","content","eventName","list","fight","id","redCornerFighter","blueCornerFighter","redCornerOdds","event","actions"],"mappings":"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","sourcesContent":["// import FightItem from \"./FightItem\";\r\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\r\nimport classes from \"./AddResultsForFightsList.module.css\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"../ui/Card\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction AddResultsForFightsList() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  console.log(location.state.eventId);\r\n\r\n  const [fights, setFights] = useState([]);\r\n  // const [walletAddressAndPrizeMap, setWalletAddressAndPrizeMap] = useState([]);\r\n  const fightsResults = new Map();\r\n  // fightsResults.set(\"a\", [1,13]);\r\n  // fightsResults.set(\"b\", [2,18]);\r\n  // fightsResults.set(\"c\", [3,-4]);\r\n\r\n  let returnFightIds = [];\r\n  let returnWinnerIds = [];\r\n  let returnMethods = [];\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/fights/event?eventId=\" + location.state.eventId,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data);\r\n        const fights = response.data;\r\n        setFights(fights);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(window.contract);\r\n    console.log(window.contract.methods);\r\n    console.log(\"USAO U LOAD\");\r\n  }\r\n\r\n  load(this);\r\n\r\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\r\n    console.log(\"changeResultsHandler\");\r\n    console.log(\"FIGHT ID \", fightId);\r\n    console.log(\"WINNER ID \", winnerId);\r\n    console.log(\"WINNING METHOD \", winningMethod);\r\n    fightsResults.set(fightId, [winnerId, winningMethod]);\r\n  };\r\n\r\n  async function submitHandler() {\r\n    console.log(\"ide gas\");\r\n    let walletAddressAndPrizeMap;\r\n\r\n    function logMapElements(value, key) {\r\n      returnFightIds.push(key);\r\n      returnWinnerIds.push(value[0]);\r\n      returnMethods.push(value[1]);\r\n    }\r\n\r\n    fightsResults.forEach(logMapElements);\r\n\r\n    console.log(returnFightIds);\r\n    console.log(returnWinnerIds);\r\n    console.log(returnMethods);\r\n    axios({\r\n      method: \"put\",\r\n      url: \"api/results/event\",\r\n      data: {\r\n        fightIds: returnFightIds,\r\n        winnerIds: returnWinnerIds,\r\n        methods: returnMethods,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(\"jesam tu sam\");\r\n        let map = response.data; //key = walletAddress, value = amount of coins to add\r\n        console.log(map);\r\n        console.log(\"TIP MAPE \", typeof map);\r\n        walletAddressAndPrizeMap = map;\r\n        // setWalletAddressAndPrizeMap(map);\r\n\r\n        //\r\n        // console.log(mapa['a'])\r\n        // console.log(mapa[1])\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let transferSuccess;\r\n    for (let [key, value] of walletAddressAndPrizeMap) {\r\n      console.log(\"in \" + key + \" add \" + value);\r\n      console.log(\"TIP \", typeof value);\r\n      // if(value !== 0) {\r\n      try {\r\n        transferSuccess = await window.contract.methods\r\n          .transfer(\r\n            key,\r\n            value * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\r\n          )\r\n          .send({ from: \"0x7f78c74b3C360d9452E94051C302e491A042024f\" });\r\n      } catch {\r\n        console.log(\"Transaction failed!\");\r\n      }\r\n      console.log(transferSuccess);\r\n\r\n      // }\r\n    }\r\n    history.replace(\"/past-events-and-fights\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <div className={classes.form}>\r\n          <div className={classes.content}>\r\n            <h2>{location.state.eventName}</h2>\r\n          </div>\r\n          <ul className={classes.list}>\r\n            {fights.map((fight) => (\r\n              <AddResultsForFightsItem\r\n                key={fight.id}\r\n                id={fight.id}\r\n                redCornerFighter={fight.redCornerFighter}\r\n                blueCornerFighter={fight.blueCornerFighter}\r\n                redCornerOdds={fight.redCornerOdds}\r\n                event={fight.event}\r\n                changeResults={changeResultsHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className={classes.actions}>\r\n            <button onClick={submitHandler}>Add result</button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default AddResultsForFightsList;\r\n"]},"metadata":{},"sourceType":"module"}