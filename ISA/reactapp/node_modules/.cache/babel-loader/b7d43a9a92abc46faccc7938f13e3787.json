{"ast":null,"code":"var _jsxFileName = \"D:\\\\diplomski react\\\\projekat\\\\reactapp\\\\src\\\\components\\\\pages\\\\AllFighters.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport FighterList from \"../components/fighters/FighterList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllFighterPage() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFighter, setLoadedFighter] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000/fighters/\"\n    }).then(response => {\n      console.log(response.data);\n    });\n  }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All fighters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: loadedFighters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllFighterPage, \"USc6Euade5VT79yZJ59xuIh1fEQ=\");\n\n_c = AllFighterPage;\nexport default AllFightersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllFighterPage\");","map":{"version":3,"sources":["D:/diplomski react/projekat/reactapp/src/components/pages/AllFighters.js"],"names":["useState","useEffect","FighterList","AllFighterPage","isLoading","setIsLoading","loadedFighter","setLoadedFighter","axios","method","url","then","response","console","log","data","loadedFighters","AllFightersPage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAG,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE;AAFD,KAAD,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KALD;AAMD,GATQ,EASN,EATM,CAAT,CAJwB,CAahB;;AAER,MAAIX,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEY;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7BQb,c;;KAAAA,c;AA+BT,eAAec,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport FighterList from \"../components/fighters/FighterList\";\r\n\r\nfunction AllFighterPage() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedFighter, setLoadedFighter] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://127.0.0.1:8000/fighters/\",\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>All fighters</h1>\r\n      <MeetupList meetups={loadedFighters} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllFightersPage;\r\n"]},"metadata":{},"sourceType":"module"}