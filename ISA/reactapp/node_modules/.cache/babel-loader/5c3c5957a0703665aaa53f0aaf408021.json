{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\eventAndFight\\\\EventAndFightList.js\",\n    _s = $RefreshSig$();\n\nimport EventAndFightItem from \"./EventAndFightItem\";\nimport classes from \"./EventAndFightList.module.css\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventAndFightList(props) {\n  _s();\n\n  console.log(\"Events U Event LIST\", props.events);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const content = await response.json();\n      console.log(\"IDE CONTENT\", content);\n      setUserId(content.id);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes.list,\n    children: props.events.map(event => /*#__PURE__*/_jsxDEV(EventAndFightItem, {\n      id: event.id,\n      name: event.name,\n      fights: event.fight_set,\n      userId: userId\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventAndFightList, \"QugO1+XZZWuQFzyainJTQ7VwjYQ=\");\n\n_c = EventAndFightList;\nexport default EventAndFightList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventAndFightList\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/eventAndFight/EventAndFightList.js"],"names":["EventAndFightItem","classes","useState","useEffect","EventAndFightList","props","console","log","events","userId","setUserId","response","fetch","headers","credentials","content","json","id","list","map","event","name","fight_set"],"mappings":";;;AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAEhCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,MAAzC;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SADoD;AAE7DC,QAAAA,WAAW,EAAE;AAFgD,OAAnC,CAA5B;AAKA,YAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BQ,OAA3B;AACAL,MAAAA,SAAS,CAACK,OAAO,CAACE,EAAT,CAAT;AACD,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAI,IAAA,SAAS,EAAEhB,OAAO,CAACiB,IAAvB;AAAA,cACGb,KAAK,CAACG,MAAN,CAAaW,GAAb,CAAkBC,KAAD,iBAChB,QAAC,iBAAD;AAEE,MAAA,EAAE,EAAEA,KAAK,CAACH,EAFZ;AAGE,MAAA,IAAI,EAAEG,KAAK,CAACC,IAHd;AAIE,MAAA,MAAM,EAAED,KAAK,CAACE,SAJhB;AAKE,MAAA,MAAM,EAAEb;AALV,OACOW,KAAK,CAACH,EADb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhCQb,iB;;KAAAA,iB;AAiCT,eAAeA,iBAAf","sourcesContent":["import EventAndFightItem from \"./EventAndFightItem\";\r\nimport classes from \"./EventAndFightList.module.css\";\r\nimport {useState,useEffect} from 'react';\r\n\r\nfunction EventAndFightList(props) {\r\n\r\n  console.log(\"Events U Event LIST\", props.events);\r\n\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const content = await response.json();\r\n      console.log(\"IDE CONTENT\", content);\r\n      setUserId(content.id);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {props.events.map((event) => (\r\n        <EventAndFightItem\r\n          key={event.id}\r\n          id={event.id}\r\n          name={event.name}\r\n          fights={event.fight_set}\r\n          userId={userId}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default EventAndFightList;"]},"metadata":{},"sourceType":"module"}