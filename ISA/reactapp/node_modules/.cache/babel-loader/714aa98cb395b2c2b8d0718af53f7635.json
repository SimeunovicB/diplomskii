{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\bets\\\\BetItem.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./BetItem.module.css\";\nimport Card from \"../ui/Card\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport UpcomingBetItem from \"./UpcomingBetItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BetItem(props) {\n  _s();\n\n  console.log(props); //   const [fight, setFight] = useState(null);\n\n  const [redCornerFighterOdds, setRedCornerFighterOdds] = useState(null);\n  const [blueCornerFighterOdds, setBlueCornerFighterOdds] = useState(null);\n  const [winnerId, setWinnerId] = useState(null);\n  const [redCornerFighterId, setRedCornerFighterId] = useState(null);\n  const [blueCornerFighterId, setBlueCornerFighterId] = useState(null);\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] = useState(null);\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fights/\" + props.fight\n    }).then(response => {\n      let fight = response.data;\n      console.log(\"daj mi fajt \", fight);\n      console.log(\"tip od odds je \", typeof fight.redCornerOdds);\n      setRedCornerFighterOdds(fight.redCornerOdds);\n      setBlueCornerFighterOdds(100 - fight.redCornerOdds);\n      setWinnerId(fight.winner_id);\n      axios({\n        method: \"get\",\n        url: \"fighters/\" + fight.redCornerFighter\n      }).then(response => {\n        let redFighter = response.data;\n        setRedCornerFighterId(redFighter.id);\n        setRedCornerFighterName(redFighter.name);\n        setRedCornerFighterSurname(redFighter.surname);\n        setRedCornerFighterImg(redFighter.image);\n      });\n      axios({\n        method: \"get\",\n        url: \"fighters/\" + fight.blueCornerFighter\n      }).then(response => {\n        let blueFighter = response.data;\n        setBlueCornerFighterId(blueFighter.id);\n        setBlueCornerFighterName(blueFighter.name);\n        setBlueCornerFighterSurname(blueFighter.surname);\n        setBlueCornerFighterImg(blueFighter.image);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); //   console.log(\"FIGHT USE STATE \", fight);\n  //   console.log(\"RED FIGHTER USE STATE \", redCornerFighter);\n  //   console.log(\"BLUE CORNER FIGHTER USE STATE \", blueCornerFighter);\n  //   let finishedFightData = \"\";\n  //   if(props.winner_id !== null) {\n  //     console.log(\"rezultat je unesen\");\n  //     if(redCornerFighterId === props.winner_id) {\n  //       finishedFightData += \"Winner is \" + redCornerFighterName + \" \" + redCornerFighterSurname + \" by \" + props.method;\n  //     } else if(blueCornerFighterId === props.winner_id) {\n  //       finishedFightData += \"Winner is \" + blueCornerFighterName + \" \" + blueCornerFighterSurname + \" by \" + props.method;\n  //     }\n  //   }\n\n  let winnerShow = \"\";\n\n  if (props.success === \"upcoming\") {} else if (props.success === \"success\") {\n    winnerShow = \"kasirao\";\n  } else if (props.success === \"failure\") {\n    winnerShow = \"propo\";\n  }\n\n  console.log(\"redCornerFighterImg\", redCornerFighterImg);\n  console.log(\"blueCornerFighterImg \", blueCornerFighterImg);\n  return (\n    /*#__PURE__*/\n    // <div>Moja je cura {ret}</div>\n    _jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Bet id: \", props.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 32\n            }, this), \"Predicted winner id: \", props.predicted_winner, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 59\n            }, this), \"Red corner odds: \", redCornerFighterOdds, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 53\n            }, this), \"Blue corner odds: \", blueCornerFighterOdds, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 54\n            }, this), winnerShow, redCornerFighterName, \" \", redCornerFighterSurname, \" vs\", \" \", blueCornerFighterName, \" \", blueCornerFighterSurname, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: redCornerFighterImg,\n              alt: \"slika borca\",\n              height: \"200\",\n              width: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), \" \", \"vs\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: blueCornerFighterImg,\n              alt: \"slika borca\",\n              height: \"200\",\n              width: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(BetItem, \"8nLjAZUUAOO2e6n7tnPiYeyVKFA=\");\n\n_c = BetItem;\nexport default BetItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BetItem\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/bets/BetItem.js"],"names":["classes","Card","axios","useState","useEffect","UpcomingBetItem","BetItem","props","console","log","redCornerFighterOdds","setRedCornerFighterOdds","blueCornerFighterOdds","setBlueCornerFighterOdds","winnerId","setWinnerId","redCornerFighterId","setRedCornerFighterId","blueCornerFighterId","setBlueCornerFighterId","redCornerFighterName","setRedCornerFighterName","blueCornerFighterName","setBlueCornerFighterName","redCornerFighterSurname","setRedCornerFighterSurname","blueCornerFighterSurname","setBlueCornerFighterSurname","redCornerFighterImg","setRedCornerFighterImg","blueCornerFighterImg","setBlueCornerFighterImg","method","url","fight","then","response","data","redCornerOdds","winner_id","redCornerFighter","redFighter","id","name","surname","image","blueCornerFighter","blueFighter","catch","error","winnerShow","success","item","content","predicted_winner"],"mappings":"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","sourcesContent":["import classes from \"./BetItem.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UpcomingBetItem from \"./UpcomingBetItem\";\r\n\r\nfunction BetItem(props) {\r\n  console.log(props);\r\n\r\n  //   const [fight, setFight] = useState(null);\r\n\r\n  const [redCornerFighterOdds, setRedCornerFighterOdds] = useState(null);\r\n  const [blueCornerFighterOdds, setBlueCornerFighterOdds] = useState(null);\r\n\r\n  const [winnerId, setWinnerId] = useState(null);\r\n\r\n  const [redCornerFighterId, setRedCornerFighterId] = useState(null);\r\n  const [blueCornerFighterId, setBlueCornerFighterId] = useState(null);\r\n\r\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\r\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\r\n\r\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\r\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\r\n    useState(null);\r\n\r\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\r\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fights/\" + props.fight,\r\n    })\r\n      .then((response) => {\r\n        let fight = response.data;\r\n        console.log(\"daj mi fajt \", fight);\r\n        console.log(\"tip od odds je \", typeof(fight.redCornerOdds));\r\n        setRedCornerFighterOdds(fight.redCornerOdds);\r\n        setBlueCornerFighterOdds(100 - fight.redCornerOdds);\r\n        setWinnerId(fight.winner_id);\r\n        axios({\r\n          method: \"get\",\r\n          url: \"fighters/\" + fight.redCornerFighter,\r\n        }).then((response) => {\r\n          let redFighter = response.data;\r\n          setRedCornerFighterId(redFighter.id);\r\n          setRedCornerFighterName(redFighter.name);\r\n          setRedCornerFighterSurname(redFighter.surname);\r\n          setRedCornerFighterImg(redFighter.image);\r\n        });\r\n\r\n        axios({\r\n          method: \"get\",\r\n          url: \"fighters/\" + fight.blueCornerFighter,\r\n        }).then((response) => {\r\n          let blueFighter = response.data;\r\n          setBlueCornerFighterId(blueFighter.id);\r\n          setBlueCornerFighterName(blueFighter.name);\r\n          setBlueCornerFighterSurname(blueFighter.surname);\r\n          setBlueCornerFighterImg(blueFighter.image);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //   console.log(\"FIGHT USE STATE \", fight);\r\n  //   console.log(\"RED FIGHTER USE STATE \", redCornerFighter);\r\n  //   console.log(\"BLUE CORNER FIGHTER USE STATE \", blueCornerFighter);\r\n\r\n  //   let finishedFightData = \"\";\r\n  //   if(props.winner_id !== null) {\r\n  //     console.log(\"rezultat je unesen\");\r\n  //     if(redCornerFighterId === props.winner_id) {\r\n  //       finishedFightData += \"Winner is \" + redCornerFighterName + \" \" + redCornerFighterSurname + \" by \" + props.method;\r\n  //     } else if(blueCornerFighterId === props.winner_id) {\r\n  //       finishedFightData += \"Winner is \" + blueCornerFighterName + \" \" + blueCornerFighterSurname + \" by \" + props.method;\r\n  //     }\r\n  //   }\r\n\r\n  let winnerShow = \"\";\r\n\r\n  if (props.success === \"upcoming\") {\r\n  } else if (props.success === \"success\") {\r\n    winnerShow = \"kasirao\";\r\n  } else if (props.success === \"failure\") {\r\n    winnerShow = \"propo\";\r\n  }\r\n\r\n  console.log(\"redCornerFighterImg\", redCornerFighterImg);\r\n  console.log(\"blueCornerFighterImg \", blueCornerFighterImg);\r\n\r\n  return (\r\n    // <div>Moja je cura {ret}</div>\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <div className={classes.content}>\r\n          <div>\r\n            Bet id: {props.id} <br />\r\n            Predicted winner id: {props.predicted_winner} <br />\r\n            Red corner odds: {redCornerFighterOdds} <br />\r\n            Blue corner odds: {blueCornerFighterOdds}<br/>\r\n            {winnerShow}\r\n            {redCornerFighterName} {redCornerFighterSurname} vs{\" \"}\r\n            {blueCornerFighterName} {blueCornerFighterSurname}\r\n            <img\r\n            src={redCornerFighterImg}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>{\" \"}\r\n          vs{\" \"}\r\n          <img\r\n            src={blueCornerFighterImg}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>\r\n          </div>\r\n          {/* <h3>\r\n            {redCornerFighter.name} {redCornerFighter.surname} vs{\" \"}\r\n            {blueCornerFighter.name} {blueCornerFighter.surname}\r\n          </h3> */}\r\n          {/* <img\r\n            src={redCornerFighter.img}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>{\" \"}\r\n          vs{\" \"}\r\n          <img\r\n            src={blueCornerFighter.img}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img> */}\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default BetItem;\r\n"]},"metadata":{},"sourceType":"module"}