{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\bets\\\\BetItem.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./BetItem.module.css\";\nimport Card from \"../ui/Card\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport UpcomingBetItem from \"./UpcomingBetItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BetItem(props) {\n  _s();\n\n  console.log(props); //   const [fight, setFight] = useState(null);\n\n  const [redCornerFighterOdds, setRedCornerFighterOdds] = useState(null); //   const [blueCornerFighterOdds, setBlueCornerFighterOdds] = useState(null);\n  //   const [redCornerFighter, setRedCornerFighter] = useState(null);\n  //   const [blueCornerFighter, setBlueCornerFighter] = useState(null);\n  // const [redCornerFighterId, setRedCornerFighterId] = useState(null);\n  // const [blueCornerFighterId, setBlueCornerFighterId] = useState(null);\n  // const [redCornerFighterName, setRedCornerFighterName] = useState(null);\n  // const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\n  // const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\n  // const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\n  //   useState(null);\n  // const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\n  // const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fights/\" + props.fight\n    }).then(response => {\n      let fight = response.data;\n      setRedCornerFighterOdds(fight.redCornerOdds);\n      axios({\n        method: \"get\",\n        url: \"fighters/\" + fight.redCornerFighter\n      }).then(response => {\n        let redFighter = response.data;\n        setRedCornerFighter(redFighter);\n      });\n      axios({\n        method: \"get\",\n        url: \"fighters/\" + fight.blueCornerFighter\n      }).then(response => {\n        let blueFighter = response.data;\n        setBlueCornerFighter(blueFighter);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); //   console.log(\"FIGHT USE STATE \", fight);\n\n  console.log(\"RED FIGHTER USE STATE \", redCornerFighter);\n  console.log(\"BLUE CORNER FIGHTER USE STATE \", blueCornerFighter); //   let finishedFightData = \"\";\n  //   if(props.winner_id !== null) {\n  //     console.log(\"rezultat je unesen\");\n  //     if(redCornerFighterId === props.winner_id) {\n  //       finishedFightData += \"Winner is \" + redCornerFighterName + \" \" + redCornerFighterSurname + \" by \" + props.method;\n  //     } else if(blueCornerFighterId === props.winner_id) {\n  //       finishedFightData += \"Winner is \" + blueCornerFighterName + \" \" + blueCornerFighterSurname + \" by \" + props.method;\n  //     }\n  //   }\n\n  let ret = \"\";\n\n  if (props.success === \"upcoming\") {\n    ret = \"cekamo ga\" + props.id;\n  } else if (props.success === \"success\") {\n    ret = \"kasirao\" + props.id;\n  } else if (props.success === \"failure\") {\n    ret = \"propo\" + props.id;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div>Moja je cura {ret}</div>\n    _jsxDEV(\"li\", {\n      className: classes.item,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [props.id, \" \", redCornerFighterOdds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(BetItem, \"fOfzdsh7d78nnr6Ly01ZspsyJjY=\");\n\n_c = BetItem;\nexport default BetItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BetItem\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/bets/BetItem.js"],"names":["classes","Card","axios","useState","useEffect","UpcomingBetItem","BetItem","props","console","log","redCornerFighterOdds","setRedCornerFighterOdds","method","url","fight","then","response","data","redCornerOdds","redCornerFighter","redFighter","setRedCornerFighter","blueCornerFighter","blueFighter","setBlueCornerFighter","catch","error","ret","success","id","item","content"],"mappings":"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","sourcesContent":["import classes from \"./BetItem.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UpcomingBetItem from \"./UpcomingBetItem\";\r\n\r\nfunction BetItem(props) {\r\n  console.log(props);\r\n\r\n  //   const [fight, setFight] = useState(null);\r\n\r\n  const [redCornerFighterOdds, setRedCornerFighterOdds] = useState(null);\r\n//   const [blueCornerFighterOdds, setBlueCornerFighterOdds] = useState(null);\r\n\r\n//   const [redCornerFighter, setRedCornerFighter] = useState(null);\r\n//   const [blueCornerFighter, setBlueCornerFighter] = useState(null);\r\n\r\n    // const [redCornerFighterId, setRedCornerFighterId] = useState(null);\r\n    // const [blueCornerFighterId, setBlueCornerFighterId] = useState(null);\r\n\r\n    // const [redCornerFighterName, setRedCornerFighterName] = useState(null);\r\n    // const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\r\n\r\n    // const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\r\n    // const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\r\n    //   useState(null);\r\n\r\n    // const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\r\n    // const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fights/\" + props.fight,\r\n    })\r\n      .then((response) => {\r\n        let fight = response.data;\r\n        setRedCornerFighterOdds(fight.redCornerOdds);\r\n        axios({\r\n          method: \"get\",\r\n          url: \"fighters/\" + fight.redCornerFighter,\r\n        }).then((response) => {\r\n          let redFighter = response.data;\r\n          setRedCornerFighter(redFighter);\r\n        });\r\n\r\n        axios({\r\n          method: \"get\",\r\n          url: \"fighters/\" + fight.blueCornerFighter,\r\n        }).then((response) => {\r\n          let blueFighter = response.data;\r\n          setBlueCornerFighter(blueFighter);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n//   console.log(\"FIGHT USE STATE \", fight);\r\n  console.log(\"RED FIGHTER USE STATE \", redCornerFighter);\r\n  console.log(\"BLUE CORNER FIGHTER USE STATE \", blueCornerFighter);\r\n\r\n  //   let finishedFightData = \"\";\r\n  //   if(props.winner_id !== null) {\r\n  //     console.log(\"rezultat je unesen\");\r\n  //     if(redCornerFighterId === props.winner_id) {\r\n  //       finishedFightData += \"Winner is \" + redCornerFighterName + \" \" + redCornerFighterSurname + \" by \" + props.method;\r\n  //     } else if(blueCornerFighterId === props.winner_id) {\r\n  //       finishedFightData += \"Winner is \" + blueCornerFighterName + \" \" + blueCornerFighterSurname + \" by \" + props.method;\r\n  //     }\r\n  //   }\r\n\r\n  let ret = \"\";\r\n\r\n  if (props.success === \"upcoming\") {\r\n    ret = \"cekamo ga\" + props.id;\r\n  } else if (props.success === \"success\") {\r\n    ret = \"kasirao\" + props.id;\r\n  } else if (props.success === \"failure\") {\r\n    ret = \"propo\" + props.id;\r\n  }\r\n\r\n  return (\r\n    // <div>Moja je cura {ret}</div>\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <div className={classes.content}>\r\n          {props.id} {redCornerFighterOdds}\r\n          {/* <h3>\r\n            {redCornerFighter.name} {redCornerFighter.surname} vs{\" \"}\r\n            {blueCornerFighter.name} {blueCornerFighter.surname}\r\n          </h3> */}\r\n          {/* <img\r\n            src={redCornerFighter.img}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>{\" \"}\r\n          vs{\" \"}\r\n          <img\r\n            src={blueCornerFighter.img}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img> */}\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default BetItem;\r\n"]},"metadata":{},"sourceType":"module"}