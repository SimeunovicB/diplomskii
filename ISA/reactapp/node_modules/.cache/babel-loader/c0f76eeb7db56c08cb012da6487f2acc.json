{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\fights\\\\NewFightForm.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../ui/Card\";\nimport classes from \"./NewFightForm.module.css\";\nimport { useRef } from \"react\";\nimport Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFightForm(props) {\n  _s();\n\n  const dateInputRef = useRef();\n  const redOddsInputRef = useRef();\n  const blueOddsInputRef = useRef();\n  const [loadedFighters, setLoadedFighters] = useState([]);\n  const [selectedOptionRed, setSelectedOptionRed] = useState(null);\n  const [selectedOptionBlue, setSelectedOptionBlue] = useState(null);\n\n  function myFunc() {\n    console.log(\"ide gas\");\n    console.log(redOddsInputRef.current.value);\n\n    if (redOddsInputRef.current.value > 100) {\n      redOddsInputRef.current.value = 100;\n    }\n  }\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"api/unscheduled/fighters\"\n    }).then(response => {\n      let fighters = response.data;\n      let ret = [];\n\n      for (let i in fighters) {\n        ret.push({\n          value: fighters[i].id,\n          label: fighters[i].name\n        });\n      }\n\n      setLoadedFighters(ret);\n    });\n  }, []);\n  console.log(\"Loaded fighters\", loadedFighters);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const enteredDate = dateInputRef.current.value;\n    const enteredOdds = redOddsInputRef.current.value;\n    const fightData = {\n      redCornerFighter: selectedOptionRed.value,\n      blueCornerFighter: selectedOptionBlue.value,\n      date: enteredDate,\n      redCornerOdds: enteredOdds\n    };\n    console.log(fightData);\n    props.onAddFight(fightData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"redCornerFighter\",\n          children: \"Red corner fighter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: selectedOptionRed,\n          onChange: setSelectedOptionRed,\n          options: loadedFighters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blueCornerFighter\",\n          children: \"Blue corner fighter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: selectedOptionBlue,\n          onChange: setSelectedOptionBlue,\n          options: loadedFighters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"redOdds\",\n          children: \"Red corner odds(%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          id: \"redOdds\",\n          max: \"100\",\n          ref: redOddsInputRef,\n          onBlur: myFunc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blueOdds\",\n          children: \"Blue corner odds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          id: \"blueOdds\",\n          max: \"100\",\n          ref: blueOddsInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Fight Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          required: true,\n          id: \"date\",\n          ref: dateInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Fight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewFightForm, \"59/dIBw+zmiNS2o05m/UTAzqRFw=\");\n\n_c = NewFightForm;\nexport default NewFightForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFightForm\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/fights/NewFightForm.js"],"names":["Card","classes","useRef","Select","useState","useEffect","axios","NewFightForm","props","dateInputRef","redOddsInputRef","blueOddsInputRef","loadedFighters","setLoadedFighters","selectedOptionRed","setSelectedOptionRed","selectedOptionBlue","setSelectedOptionBlue","myFunc","console","log","current","value","method","url","then","response","fighters","data","ret","i","push","id","label","name","submitHandler","event","preventDefault","enteredDate","enteredOdds","fightData","redCornerFighter","blueCornerFighter","date","redCornerOdds","onAddFight","form","control","actions"],"mappings":"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","sourcesContent":["import Card from \"../ui/Card\";\r\nimport classes from \"./NewFightForm.module.css\";\r\nimport { useRef } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction NewFightForm(props) {\r\n\r\n  const dateInputRef = useRef();\r\n  const redOddsInputRef = useRef();\r\n  const blueOddsInputRef = useRef();\r\n\r\n  const [loadedFighters, setLoadedFighters] = useState([]);\r\n  const [selectedOptionRed, setSelectedOptionRed] = useState(null);\r\n  const [selectedOptionBlue, setSelectedOptionBlue] = useState(null);\r\n\r\n  function myFunc() {\r\n    console.log(\"ide gas\")\r\n    console.log(redOddsInputRef.current.value);\r\n    if(redOddsInputRef.current.value > 100) {\r\n      redOddsInputRef.current.value = 100;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/unscheduled/fighters\",\r\n    }).then((response) => {\r\n      let fighters = response.data;\r\n      let ret = [];\r\n      for (let i in fighters) {\r\n        ret.push({ value: fighters[i].id, label: fighters[i].name });\r\n      }\r\n      setLoadedFighters(ret);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"Loaded fighters\", loadedFighters);\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const enteredDate = dateInputRef.current.value;\r\n    const enteredOdds = redOddsInputRef.current.value;\r\n\r\n\r\n    const fightData = {\r\n      redCornerFighter: selectedOptionRed.value,\r\n      blueCornerFighter: selectedOptionBlue.value,\r\n      date: enteredDate,\r\n      redCornerOdds: enteredOdds\r\n    };\r\n\r\n    console.log(fightData);\r\n    props.onAddFight(fightData);\r\n  }\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"redCornerFighter\">Red corner fighter</label>\r\n          <Select\r\n            defaultValue={selectedOptionRed}\r\n            onChange={setSelectedOptionRed}\r\n            options={loadedFighters}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"blueCornerFighter\">Blue corner fighter</label>\r\n          <Select\r\n            defaultValue={selectedOptionBlue}\r\n            onChange={setSelectedOptionBlue}\r\n            options={loadedFighters}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"redOdds\">Red corner odds(%)</label>\r\n          <input type=\"number\" required id=\"redOdds\" max=\"100\" ref={redOddsInputRef} onBlur={myFunc}/>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"blueOdds\">Blue corner odds</label>\r\n          <input type=\"number\" required id=\"blueOdds\" max=\"100\" ref={blueOddsInputRef}/>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"date\">Fight Date</label>\r\n          <input type=\"date\" required id=\"date\" ref={dateInputRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>Add Fight</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n}\r\nexport default NewFightForm;\r\n"]},"metadata":{},"sourceType":"module"}