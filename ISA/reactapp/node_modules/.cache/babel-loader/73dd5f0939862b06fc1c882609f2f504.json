{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\pages\\\\NewFight.js\",\n    _s = $RefreshSig$();\n\nimport NewFightForm from \"../fights/NewFightForm\";\nimport axios from 'axios';\nimport classes from \"./NewFight.module.css\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFight(props) {\n  _s();\n\n  console.log(\"PROPS\");\n  console.log(\"NEW FIGHT KONACNO\", props.eventId);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const content = await response.json();\n      setUserId(content.id);\n    })();\n  }, []);\n\n  function addFightHandler(fightData) {\n    console.log(\"redCornerFighter \", fightData.redCornerFighter);\n    console.log(\"blueCornerFighter \", fightData.blueCornerFighter);\n    axios({\n      method: \"post\",\n      url: \"fights/?userId=\" + userId,\n      data: {\n        redCornerFighter: fightData.redCornerFighter,\n        blueCornerFighter: fightData.blueCornerFighter,\n        redCornerOdds: fightData.redCornerOdds,\n        eventId: props.eventId\n      }\n    }).then(response => {\n      console.log(\"RESPONSE\");\n      console.log(response);\n      console.log(response.data);\n      console.log(response.status);\n\n      if (response.status === 201) {\n        console.log(\"JESTE 201\");\n        console.log(fightData);\n        axios({\n          method: \"put\",\n          url: \"api/fighter/schedule\",\n          data: {\n            redCornerFighter: fightData.redCornerFighter,\n            blueCornerFighter: fightData.blueCornerFighter\n          }\n        }).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      props.addFightDone(props.eventId, props.eventName);\n    });\n  }\n\n  const goBackToEventsHandler = () => {\n    console.log(\"Drugi\");\n    props.goBackToEvents();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add new fight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFightForm, {\n      onAddFight: addFightHandler,\n      goBackToEvents: goBackToEventsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewFight, \"3Wqp+3i/O+YkXuFrDYPUiZelhzk=\");\n\n_c = NewFight;\nexport default NewFight;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFight\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/pages/NewFight.js"],"names":["NewFightForm","axios","classes","useState","useEffect","NewFight","props","console","log","eventId","userId","setUserId","response","fetch","headers","credentials","content","json","id","addFightHandler","fightData","redCornerFighter","blueCornerFighter","method","url","data","redCornerOdds","then","status","catch","error","addFightDone","eventName","goBackToEventsHandler","goBackToEvents"],"mappings":"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","sourcesContent":["import NewFightForm from \"../fights/NewFightForm\";\r\nimport axios from 'axios';\r\nimport classes from \"./NewFight.module.css\"\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nfunction NewFight(props) {\r\n\r\n  console.log(\"PROPS\")\r\n  console.log(\"NEW FIGHT KONACNO\", props.eventId);\r\n\r\n\r\n  const [userId, setUserId] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n      const content = await response.json();\r\n      setUserId(content.id);\r\n    })();\r\n  }, []);\r\n\r\n\r\n  function addFightHandler(fightData) {\r\n    console.log(\"redCornerFighter \", fightData.redCornerFighter);\r\n    console.log(\"blueCornerFighter \", fightData.blueCornerFighter);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"fights/?userId=\" + userId,\r\n      data: {\r\n        redCornerFighter: fightData.redCornerFighter,\r\n        blueCornerFighter: fightData.blueCornerFighter,\r\n        redCornerOdds: fightData.redCornerOdds,\r\n        eventId: props.eventId\r\n      }\r\n    }).then((response) => {\r\n      console.log(\"RESPONSE\")\r\n      console.log(response);\r\n      console.log(response.data)\r\n      console.log(response.status);\r\n      if(response.status === 201) {\r\n        console.log(\"JESTE 201\");\r\n        console.log(fightData);\r\n        axios({\r\n          method: \"put\",\r\n          url: \"api/fighter/schedule\",\r\n          data: {\r\n            redCornerFighter: fightData.redCornerFighter,\r\n            blueCornerFighter: fightData.blueCornerFighter\r\n          },\r\n        })\r\n          .then((response) => {\r\n            console.log(response);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      props.addFightDone(props.eventId, props.eventName);\r\n    });\r\n  }\r\n\r\n\r\n  const goBackToEventsHandler = () => {\r\n    console.log(\"Drugi\")\r\n    props.goBackToEvents();\r\n  }\r\n\r\n\r\n  return (\r\n    <section className={classes.content}>\r\n      <h1>Add new fight</h1>\r\n      <NewFightForm onAddFight={addFightHandler} goBackToEvents={goBackToEventsHandler}/>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NewFight;\r\n"]},"metadata":{},"sourceType":"module"}