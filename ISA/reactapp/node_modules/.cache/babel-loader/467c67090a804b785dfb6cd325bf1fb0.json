{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\pages\\\\EventFights.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FightList from \"../fights/FightList\";\nimport classes from \"./EventFights.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventFights(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFights, setLoadedFights] = useState([]);\n  const [numberOfFights, setNumberOfFights] = useState(\"\"); // useEffect(() => {\n  //   setIsLoading(true);\n  //   axios({\n  //     method: \"get\",\n  //     url: \"fights\",\n  //   }).then((response) => {\n  //     let fights = response.data;\n  //     let ret = [];\n  //     console.log(\"FAJTOVI\", fights)\n  //     for(let i in fights) {\n  //       // console.log(fighters[i]);\n  //       ret.push(fights[i]);\n  //     }\n  //     console.log(\"RET\", ret);\n  //     if(fights === ret) {\n  //       console.log(\"ISTO\");\n  //     } else {\n  //       console.log(\"NIJE ISTO\")\n  //     }\n  //     setIsLoading(false);\n  //     setLoadedFights(ret);\n  //     // console.log(\"LOADED\",loadedFighters);\n  //   });\n  // }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\n\n  console.log(\"EVENT FIGHTS\", props.eventId);\n  console.log(props.eventName);\n  useEffect(() => {\n    setIsLoading(true);\n    axios({\n      method: \"get\",\n      url: \"api/fights/event?eventId=\" + props.eventId\n    }).then(response => {\n      let fights = response.data;\n      let ret = [];\n      console.log(\"FAJTOVI\", fights);\n\n      for (let i in fights) {\n        ret.push(fights[i]);\n      }\n\n      setNumberOfFights(ret.length);\n      setIsLoading(false);\n      setLoadedFights(ret);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const goBackToEventsAction = () => {\n    props.goBackToEvents();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else if (numberOfFights === 0) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No scheduled fights for this event.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBackToEventsAction,\n          children: \"Back to events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Fights for \", props.eventName, \" event\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FightList, {\n      fights: loadedFights\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goBackToEventsAction,\n        children: \"Back to events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventFights, \"RbOSqCjjj9QJUBHs0ni7boc6EyQ=\");\n\n_c = EventFights;\nexport default EventFights;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventFights\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/pages/EventFights.js"],"names":["useState","useEffect","axios","FightList","classes","EventFights","props","isLoading","setIsLoading","loadedFights","setLoadedFights","numberOfFights","setNumberOfFights","console","log","eventId","eventName","method","url","then","response","fights","data","ret","i","push","length","goBackToEventsAction","goBackToEvents","actions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD,CAH0B,CAK1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,KAAK,CAACS,OAAlC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACU,SAAlB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAN,IAAAA,KAAK,CAAC;AACJe,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,8BAA8BZ,KAAK,CAACS;AAFrC,KAAD,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAc;AACpB,UAAIC,MAAM,GAAGD,QAAQ,CAACE,IAAtB;AACA,UAAIC,GAAG,GAAG,EAAV;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,MAAvB;;AACA,WAAK,IAAIG,CAAT,IAAcH,MAAd,EAAsB;AACpBE,QAAAA,GAAG,CAACE,IAAJ,CAASJ,MAAM,CAACG,CAAD,CAAf;AACD;;AACDZ,MAAAA,iBAAiB,CAACW,GAAG,CAACG,MAAL,CAAjB;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAACa,GAAD,CAAf;AACD,KAbD;AAcD,GAjBQ,EAiBN,EAjBM,CAAT,CAlC0B,CAmDlB;;AAER,QAAMI,oBAAoB,GAAG,MAAM;AACjCrB,IAAAA,KAAK,CAACsB,cAAN;AACD,GAFD;;AAIA,MAAIrB,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO,IAAII,cAAc,KAAK,CAAvB,EAA0B;AAC/B,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACyB,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEF,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE;AAAA,4BACE;AAAA,gCAAgBrB,KAAK,CAACU,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACyB,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnFQtB,W;;KAAAA,W;AAqFT,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport FightList from \"../fights/FightList\";\r\nimport classes from \"./EventFights.module.css\";\r\n\r\nfunction EventFights(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedFights, setLoadedFights] = useState([]);\r\n  const [numberOfFights, setNumberOfFights] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"fights\",\r\n  //   }).then((response) => {\r\n  //     let fights = response.data;\r\n  //     let ret = [];\r\n  //     console.log(\"FAJTOVI\", fights)\r\n  //     for(let i in fights) {\r\n  //       // console.log(fighters[i]);\r\n  //       ret.push(fights[i]);\r\n  //     }\r\n  //     console.log(\"RET\", ret);\r\n  //     if(fights === ret) {\r\n  //       console.log(\"ISTO\");\r\n  //     } else {\r\n  //       console.log(\"NIJE ISTO\")\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //     setLoadedFights(ret);\r\n  //     // console.log(\"LOADED\",loadedFighters);\r\n  //   });\r\n  // }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\r\n\r\n  console.log(\"EVENT FIGHTS\", props.eventId);\r\n  console.log(props.eventName);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/fights/event?eventId=\" + props.eventId,\r\n    }).then((response) => {\r\n      let fights = response.data;\r\n      let ret = [];\r\n      console.log(\"FAJTOVI\", fights);\r\n      for (let i in fights) {\r\n        ret.push(fights[i]);\r\n      }\r\n      setNumberOfFights(ret.length);\r\n      setIsLoading(false);\r\n      setLoadedFights(ret);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const goBackToEventsAction = () => {\r\n    props.goBackToEvents();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  } else if (numberOfFights === 0) {\r\n    return (\r\n      <section>\r\n        <p>No scheduled fights for this event.</p>\r\n        <div className={classes.actions}>\r\n          <button onClick={goBackToEventsAction}>Back to events</button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Fights for {props.eventName} event</h2>\r\n      <FightList fights={loadedFights} />\r\n      <div className={classes.actions}>\r\n        <button onClick={goBackToEventsAction}>Back to events</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventFights;\r\n"]},"metadata":{},"sourceType":"module"}