{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\pages\\\\AllEvents.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport EventList from \"../events/EventList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllEvents() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedEvents, setLoadedEvents] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    axios({\n      method: \"get\",\n      url: \"api/events/upcoming\"\n    }).then(response => {\n      let events = response.data;\n      let ret = [];\n      console.log(\"Events\", events);\n\n      for (let i in events) {\n        ret.push(events[i]);\n      }\n\n      console.log(\"RET\", ret);\n      setIsLoading(false);\n      setLoadedEvents(ret);\n    });\n  }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: loadedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllEvents, \"S79DuzcDDBTiHzGwOmILXpf2pT8=\");\n\n_c = AllEvents;\nexport default AllEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEvents\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/pages/AllEvents.js"],"names":["useState","useEffect","axios","EventList","AllEvents","isLoading","setIsLoading","loadedEvents","setLoadedEvents","method","url","then","response","events","data","ret","console","log","i","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAJ,IAAAA,KAAK,CAAC;AACJO,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE;AAFD,KAAD,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;AACpB,UAAIC,MAAM,GAAGD,QAAQ,CAACE,IAAtB;AACA,UAAIC,GAAG,GAAG,EAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;;AACA,WAAI,IAAIK,CAAR,IAAaL,MAAb,EAAqB;AACnBE,QAAAA,GAAG,CAACI,IAAJ,CAASN,MAAM,CAACK,CAAD,CAAf;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAACO,GAAD,CAAf;AACD,KAbD;AAcD,GAjBQ,EAiBN,EAjBM,CAAT,CAJmB,CAqBX;;AAER,MAAIV,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArCQH,S;;KAAAA,S;AAuCT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport EventList from \"../events/EventList\";\r\n\r\nfunction AllEvents() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedEvents, setLoadedEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/events/upcoming\",\r\n    }).then((response) => {\r\n      let events = response.data;\r\n      let ret = [];\r\n      console.log(\"Events\", events)\r\n      for(let i in events) {\r\n        ret.push(events[i]);\r\n      }\r\n      console.log(\"RET\", ret);\r\n      setIsLoading(false);\r\n      setLoadedEvents(ret);\r\n    });\r\n  }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upcoming events</h1>\r\n      <EventList events={loadedEvents} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllEvents;\r\n"]},"metadata":{},"sourceType":"module"}