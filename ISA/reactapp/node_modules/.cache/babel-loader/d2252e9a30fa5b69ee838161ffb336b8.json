{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\results\\\\AddResultsForFightsItem.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AddResultsForFightsItem.module.css\";\nimport Card from \"../ui/Card\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddResultsForFightsItem(props) {\n  _s();\n\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] = useState(null);\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null); // const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\n  // const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\n  // const [redCornerFighterAge, setRedCornerFighterAge] = useState(null);\n  // const [blueCornerFighterAge, setBlueCornerFighterAge] = useState(null);\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\n  // const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\n  // const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\n\n  const [selectedOptionWinner, setSelectedOptionWinner] = useState(null);\n  const [selectedOptionMethod, setSelectedOptionMethod] = useState(\"\");\n  const [loadedFighters, setLoadedFighters] = useState([]);\n  const methodOptions = [{\n    value: \"Decision\",\n    label: \"Decision\"\n  }, {\n    value: \"KO/TKO\",\n    label: \"KO/TKO\"\n  }, {\n    value: \"Submission\",\n    label: \"Submission\"\n  }]; // console.log(\"RED CORNER FIGHTER \", props.redCornerFighter);\n  // console.log(\"BLUE CORNER FIGHTER \", props.blueCornerFighter);\n  // console.log(\"WINNER_ID \", props.winner_id);\n  // console.log(\"ID OD FIGHT JE \", props.id);\n\n  console.log(\"PROPS \", props);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fighters/\" + props.blueCornerFighter\n    }).then(response => {\n      console.log(response.data);\n      let blueFighter = response.data;\n      setBlueCornerFighterName(blueFighter.name);\n      setBlueCornerFighterSurname(blueFighter.surname);\n      setBlueCornerFighterImg(blueFighter.image);\n      loadedFighters.push({\n        value: blueFighter.id,\n        label: blueFighter.name + \" \" + blueFighter.surname\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fighters/\" + props.redCornerFighter\n    }).then(response => {\n      let redFighter = response.data;\n      setRedCornerFighterName(redFighter.name);\n      setRedCornerFighterSurname(redFighter.surname);\n      setRedCornerFighterImg(redFighter.image);\n      loadedFighters.push({\n        value: redFighter.id,\n        label: redFighter.name + \" \" + redFighter.surname\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const changeResultsHandler = () => {\n    console.log(\"ide gaaaas\");\n\n    if (selectedOptionWinner !== null && selectedOptionMethod !== \"\") {\n      console.log(\"selectedOptionWinner\", selectedOptionWinner);\n      console.log(\"selectedOptionMethod\", selectedOptionMethod);\n      props.changeResults(props.id, selectedOptionWinner, selectedOptionMethod); // console.log(\"PROBA AXIOS\");\n      // axios({\n      //   method: 'put',\n      //   url: 'fights/' + props.id + '/',\n      //   data: {\n      //     redCornerFighter: props.redCornerFighter,\n      //     blueCornerFighter: props.blueCornerFighter,\n      //     redCornerOdds: props.redCornerOdds,\n      //     winner_id: selectedOptionWinner,\n      //     method: selectedOptionMethod,\n      //     event: props.event\n      //   }\n      // }).then(response => {\n      //   console.log(response);\n      // }).catch(error => {\n      //   console.log(error);\n      // })\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: redCornerFighterImg,\n            alt: \"slika borca\",\n            height: \"200\",\n            width: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: blueCornerFighterImg,\n            alt: \"slika borca\",\n            height: \"200\",\n            width: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [redCornerFighterName, \" \", redCornerFighterSurname, \" vs\", \" \", blueCornerFighterName, \" \", blueCornerFighterSurname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"redCornerFighter\",\n          children: \"Winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onBlur: changeResultsHandler,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: selectedOptionWinner,\n            onChange: setSelectedOptionWinner,\n            options: loadedFighters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blueCornerFighter\",\n          children: \"Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onBlur: changeResultsHandler,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: selectedOptionMethod,\n            onChange: setSelectedOptionMethod,\n            options: methodOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddResultsForFightsItem, \"aj2bXNBzUxKZcrGDMtf2GNS8Gew=\");\n\n_c = AddResultsForFightsItem;\nexport default AddResultsForFightsItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddResultsForFightsItem\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/results/AddResultsForFightsItem.js"],"names":["classes","Card","axios","useState","useEffect","Select","AddResultsForFightsItem","props","redCornerFighterName","setRedCornerFighterName","blueCornerFighterName","setBlueCornerFighterName","redCornerFighterSurname","setRedCornerFighterSurname","blueCornerFighterSurname","setBlueCornerFighterSurname","redCornerFighterImg","setRedCornerFighterImg","blueCornerFighterImg","setBlueCornerFighterImg","selectedOptionWinner","setSelectedOptionWinner","selectedOptionMethod","setSelectedOptionMethod","loadedFighters","setLoadedFighters","methodOptions","value","label","console","log","method","url","blueCornerFighter","then","response","data","blueFighter","name","surname","image","push","id","redCornerFighter","redFighter","changeResultsHandler","changeResults","item","content","control"],"mappings":"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","sourcesContent":["import classes from \"./AddResultsForFightsItem.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nfunction AddResultsForFightsItem(props) {\r\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\r\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\r\n\r\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\r\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\r\n    useState(null);\r\n\r\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\r\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\r\n\r\n  // const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\r\n  // const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\r\n\r\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\r\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\r\n\r\n  // const [redCornerFighterAge, setRedCornerFighterAge] = useState(null);\r\n  // const [blueCornerFighterAge, setBlueCornerFighterAge] = useState(null);\r\n\r\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\r\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\r\n\r\n  // const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\r\n  // const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\r\n\r\n  // const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\r\n  // const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\r\n\r\n  const [selectedOptionWinner, setSelectedOptionWinner] = useState(null);\r\n  const [selectedOptionMethod, setSelectedOptionMethod] = useState(\"\");\r\n\r\n  const [loadedFighters, setLoadedFighters] = useState([]);\r\n  const methodOptions = [\r\n    { value: \"Decision\", label: \"Decision\" },\r\n    { value: \"KO/TKO\", label: \"KO/TKO\" },\r\n    { value: \"Submission\", label: \"Submission\" },\r\n  ];\r\n\r\n  // console.log(\"RED CORNER FIGHTER \", props.redCornerFighter);\r\n  // console.log(\"BLUE CORNER FIGHTER \", props.blueCornerFighter);\r\n  // console.log(\"WINNER_ID \", props.winner_id);\r\n  // console.log(\"ID OD FIGHT JE \", props.id);\r\n\r\n  console.log(\"PROPS \", props);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + props.blueCornerFighter,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      let blueFighter = response.data;\r\n      setBlueCornerFighterName(blueFighter.name);\r\n      setBlueCornerFighterSurname(blueFighter.surname);\r\n      setBlueCornerFighterImg(blueFighter.image);\r\n      loadedFighters.push({\r\n        value: blueFighter.id,\r\n        label: blueFighter.name + \" \" + blueFighter.surname,\r\n      });\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + props.redCornerFighter,\r\n    }).then((response) => {\r\n      let redFighter = response.data;\r\n      setRedCornerFighterName(redFighter.name);\r\n      setRedCornerFighterSurname(redFighter.surname);\r\n      setRedCornerFighterImg(redFighter.image);\r\n      loadedFighters.push({\r\n        value: redFighter.id,\r\n        label: redFighter.name + \" \" + redFighter.surname,\r\n      });\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const changeResultsHandler = () => {\r\n    console.log(\"ide gaaaas\");\r\n    if (selectedOptionWinner !== null && selectedOptionMethod !== \"\") {\r\n      console.log(\"selectedOptionWinner\", selectedOptionWinner);\r\n      console.log(\"selectedOptionMethod\", selectedOptionMethod);\r\n      props.changeResults(props.id, selectedOptionWinner, selectedOptionMethod);\r\n      // console.log(\"PROBA AXIOS\");\r\n      // axios({\r\n      //   method: 'put',\r\n      //   url: 'fights/' + props.id + '/',\r\n      //   data: {\r\n      //     redCornerFighter: props.redCornerFighter,\r\n      //     blueCornerFighter: props.blueCornerFighter,\r\n      //     redCornerOdds: props.redCornerOdds,\r\n      //     winner_id: selectedOptionWinner,\r\n      //     method: selectedOptionMethod,\r\n      //     event: props.event\r\n      //   }\r\n      // }).then(response => {\r\n      //   console.log(response);\r\n      // }).catch(error => {\r\n      //   console.log(error);\r\n      // })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <div className={classes.content}>\r\n          \r\n        <div className={classes.content}>\r\n          <img\r\n            src={redCornerFighterImg}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>{\" \"}\r\n          {\" \"}\r\n          <img\r\n            src={blueCornerFighterImg}\r\n            alt=\"slika borca\"\r\n            height=\"200\"\r\n            width=\"200\"\r\n          ></img>\r\n          <h3>\r\n            {redCornerFighterName} {redCornerFighterSurname} vs{\" \"}\r\n            {blueCornerFighterName} {blueCornerFighterSurname}\r\n          </h3>\r\n        </div>\r\n        </div>\r\n\r\n        {/* <form className={classes.form} onSubmit={submitHandler}> */}\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"redCornerFighter\">Winner</label>\r\n          <div onBlur={changeResultsHandler}>\r\n            <Select\r\n              defaultValue={selectedOptionWinner}\r\n              onChange={setSelectedOptionWinner}\r\n              options={loadedFighters}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"blueCornerFighter\">Method</label>\r\n          <div onBlur={changeResultsHandler}>\r\n            <Select\r\n              defaultValue={selectedOptionMethod}\r\n              onChange={setSelectedOptionMethod}\r\n              options={methodOptions}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* <div className={classes.actions}>\r\n            <button onClick={submitHandler}>Add result</button>\r\n          </div> */}\r\n        {/* </form> */}\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default AddResultsForFightsItem;\r\n"]},"metadata":{},"sourceType":"module"}