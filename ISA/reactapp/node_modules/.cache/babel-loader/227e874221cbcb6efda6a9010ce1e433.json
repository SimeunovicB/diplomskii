{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\pages\\\\MyBets.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios'; // import BetsList from \"../events/BetsList\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyBets(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedBets, setLoadedBets] = useState([]);\n  console.log(props.user);\n  console.log(\"USER ID \", props.user.id);\n  console.log(\"DZET SET \", props.user.bet_set); //   useEffect(() => {\n  //     setIsLoading(true);\n  //     axios({\n  //       method: \"get\",\n  //       url: \"api/bets/user?userId=\" + props.user.id,\n  //     }).then((response) => {\n  //       let bets = response.data;\n  //       let ret = [];\n  //       console.log(\"Bets\", bets)\n  //       for(let i in bets) {\n  //         ret.push(bets[i]);\n  //       }\n  //       console.log(\"RET\", ret);\n  //       setIsLoading(false);\n  //       setLoadedBets(ret);\n  //     });\n  //   }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyBets, \"or9+ZiaCDRt7Jd1t1K+sMGa2jU0=\");\n\n_c = MyBets;\nexport default MyBets;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyBets\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/pages/MyBets.js"],"names":["useState","useEffect","axios","MyBets","props","isLoading","setIsLoading","loadedBets","setLoadedBets","console","log","user","id","bet_set"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,IAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,KAAK,CAACO,IAAN,CAAWC,EAAnC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,KAAK,CAACO,IAAN,CAAWE,OAApC,EANqB,CAUvB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAIR,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3CQF,M;;KAAAA,M;AA6CT,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n// import BetsList from \"../events/BetsList\";\r\n\r\nfunction MyBets(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedBets, setLoadedBets] = useState([]);\r\n\r\n  console.log(props.user);\r\n  console.log(\"USER ID \", props.user.id);\r\n  console.log(\"DZET SET \", props.user.bet_set)\r\n\r\n  \r\n\r\n//   useEffect(() => {\r\n//     setIsLoading(true);\r\n\r\n//     axios({\r\n//       method: \"get\",\r\n//       url: \"api/bets/user?userId=\" + props.user.id,\r\n//     }).then((response) => {\r\n//       let bets = response.data;\r\n//       let ret = [];\r\n//       console.log(\"Bets\", bets)\r\n//       for(let i in bets) {\r\n//         ret.push(bets[i]);\r\n//       }\r\n//       console.log(\"RET\", ret);\r\n//       setIsLoading(false);\r\n//       setLoadedBets(ret);\r\n//     });\r\n//   }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upcoming events</h1>\r\n      {/* <EventList events={loadedEvents} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyBets;\r\n"]},"metadata":{},"sourceType":"module"}