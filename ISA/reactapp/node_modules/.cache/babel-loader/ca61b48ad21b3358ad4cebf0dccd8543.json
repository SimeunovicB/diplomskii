{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\results\\\\AddResultsForFightsList.js\",\n    _s = $RefreshSig$();\n\n// import FightItem from \"./FightItem\";\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\nimport classes from \"./AddResultsForFightsList.module.css\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../ui/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddResultsForFightsList() {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  console.log(location.state.eventId);\n  const [fights, setFights] = useState([]);\n  const fightsResults = new Map(); // fightsResults.set(\"a\", [1,13]);\n  // fightsResults.set(\"b\", [2,18]);\n  // fightsResults.set(\"c\", [3,-4]);\n\n  let returnFightIds = [];\n  let returnWinnerIds = [];\n  let returnMethods = [];\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"api/fights/event?eventId=\" + location.state.eventId\n    }).then(response => {\n      console.log(response);\n      console.log(response.data);\n      const fights = response.data;\n      setFights(fights);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\n\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\n    console.log(\"changeResultsHandler\");\n    console.log(\"FIGHT ID \", fightId);\n    console.log(\"WINNER ID \", winnerId);\n    console.log(\"WINNING METHOD \", winningMethod);\n    fightsResults.set(fightId, [winnerId, winningMethod]);\n  };\n\n  const submitHandler = () => {\n    console.log(\"ide gas\");\n\n    function logMapElements(value, key) {\n      returnFightIds.push(key);\n      returnWinnerIds.push(value[0]);\n      returnMethods.push(value[1]);\n    }\n\n    fightsResults.forEach(logMapElements);\n    console.log(returnFightIds);\n    console.log(returnWinnerIds);\n    console.log(returnMethods);\n    axios({\n      method: \"put\",\n      url: \"api/results/event\",\n      data: {\n        fightIds: returnFightIds,\n        winnerIds: returnWinnerIds,\n        methods: returnMethods\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(\"jesam tu sam\");\n      let mapa = response.data;\n      console.log(mapa);\n      console.log(mapa[a]); // console.log(mapa[1])\n    }).catch(error => {\n      console.log(error);\n    });\n    history.replace(\"/past-events-and-fights\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: location.state.eventName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.list,\n          children: fights.map(fight => /*#__PURE__*/_jsxDEV(AddResultsForFightsItem, {\n            id: fight.id,\n            redCornerFighter: fight.redCornerFighter,\n            blueCornerFighter: fight.blueCornerFighter,\n            redCornerOdds: fight.redCornerOdds,\n            event: fight.event,\n            changeResults: changeResultsHandler\n          }, fight.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitHandler,\n            children: \"Add result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddResultsForFightsList, \"h+H9FDRJKV5sNQqvwkl1HYUsQXU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = AddResultsForFightsList;\nexport default AddResultsForFightsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddResultsForFightsList\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/results/AddResultsForFightsList.js"],"names":["AddResultsForFightsItem","classes","useLocation","useHistory","useState","useEffect","axios","Card","AddResultsForFightsList","location","history","console","log","state","eventId","fights","setFights","fightsResults","Map","returnFightIds","returnWinnerIds","returnMethods","method","url","then","response","data","catch","error","changeResultsHandler","fightId","winnerId","winningMethod","set","submitHandler","logMapElements","value","key","push","forEach","fightIds","winnerIds","methods","mapa","a","replace","form","content","eventName","list","map","fight","id","redCornerFighter","blueCornerFighter","redCornerOdds","event","actions"],"mappings":"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","sourcesContent":["// import FightItem from \"./FightItem\";\r\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\r\nimport classes from \"./AddResultsForFightsList.module.css\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"../ui/Card\";\r\n\r\nfunction AddResultsForFightsList() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  console.log(location.state.eventId);\r\n\r\n  const [fights, setFights] = useState([]);\r\n  const fightsResults = new Map();\r\n  // fightsResults.set(\"a\", [1,13]);\r\n  // fightsResults.set(\"b\", [2,18]);\r\n  // fightsResults.set(\"c\", [3,-4]);\r\n\r\n  let returnFightIds = [];\r\n  let returnWinnerIds = [];\r\n  let returnMethods = [];\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/fights/event?eventId=\" + location.state.eventId,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data);\r\n        const fights = response.data;\r\n        setFights(fights);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\r\n\r\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\r\n    console.log(\"changeResultsHandler\");\r\n    console.log(\"FIGHT ID \", fightId);\r\n    console.log(\"WINNER ID \", winnerId);\r\n    console.log(\"WINNING METHOD \", winningMethod);\r\n    fightsResults.set(fightId, [winnerId, winningMethod]);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    console.log(\"ide gas\");\r\n\r\n    function logMapElements(value, key) {\r\n      returnFightIds.push(key);\r\n      returnWinnerIds.push(value[0]);\r\n      returnMethods.push(value[1]);\r\n    }\r\n\r\n    fightsResults.forEach(logMapElements);\r\n\r\n    console.log(returnFightIds);\r\n    console.log(returnWinnerIds);\r\n    console.log(returnMethods);\r\n    axios({\r\n      method: \"put\",\r\n      url: \"api/results/event\",\r\n      data: {\r\n        fightIds: returnFightIds,\r\n        winnerIds: returnWinnerIds,\r\n        methods: returnMethods,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(\"jesam tu sam\")\r\n        let mapa = response.data;\r\n        console.log(mapa);\r\n        console.log(mapa[a])\r\n        // console.log(mapa[1])\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    history.replace(\"/past-events-and-fights\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <div className={classes.form}>\r\n          <div className={classes.content}>\r\n            <h2>{location.state.eventName}</h2>\r\n          </div>\r\n          <ul className={classes.list}>\r\n            {fights.map((fight) => (\r\n              <AddResultsForFightsItem\r\n                key={fight.id}\r\n                id={fight.id}\r\n                redCornerFighter={fight.redCornerFighter}\r\n                blueCornerFighter={fight.blueCornerFighter}\r\n                redCornerOdds={fight.redCornerOdds}\r\n                event={fight.event}\r\n                changeResults={changeResultsHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className={classes.actions}>\r\n            <button onClick={submitHandler}>Add result</button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default AddResultsForFightsList;\r\n"]},"metadata":{},"sourceType":"module"}