{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\results\\\\AddResultsForFightsList.js\",\n    _s = $RefreshSig$();\n\n// import FightItem from \"./FightItem\";\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\nimport classes from \"./AddResultsForFightsList.module.css\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"../ui/Card\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddResultsForFightsList() {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  console.log(\"IDEMOOOO \", location.state);\n  const [fights, setFights] = useState([]);\n  const [adminWalletAddress, setAdminWalletAddress] = useState(\"\");\n  const [eventId, setEventId] = useState(\"\");\n  const [eventName, setEventName] = useState(\"\");\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    if (location.state) {\n      setEventId(location.state.eventId);\n      setEventName(location.state.eventName);\n    }\n  }, []);\n  const [pendingMessage, setPendingMessage] = useState(\"\" //Transaction in progress, please wait.\n  );\n  const [errorMessage, setErrorMessage] = useState(\"\"); //Error while attempting transaction!\n\n  const [loggedWalletAddress, setLoggedWalletAddress] = useState(\"\");\n  const fightsResults = new Map();\n  let returnFightIds = [];\n  let returnWinnerIds = [];\n  let returnMethods = [];\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"api/fights/event?eventId=\" + location.state.eventId\n    }).then(response => {\n      console.log(response);\n      console.log(response.data);\n      const fights = response.data;\n      setFights(fights);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const content = await response.json();\n      console.log(\"IDE CONTENT\", content);\n      setUserId(content.id);\n    })();\n  }, []);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"api/admin\"\n    }).then(response => {\n      console.log(\"API ADMIN INACTIVE USER ITEM \", response.data);\n      let admin = response.data;\n      setAdminWalletAddress(admin.wallet_address);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      window.ethereum.enable();\n      console.log(\"USAO U IF\");\n    }\n\n    console.log(\"USAO U loadWeb3\");\n  }\n\n  async function loadContract() {\n    console.log(\"VERZIJA WEB3\");\n    console.log(window.web3.version);\n    return await new window.web3.eth.Contract([{\n      constant: true,\n      inputs: [],\n      name: \"name\",\n      outputs: [{\n        name: \"\",\n        type: \"string\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_spender\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"approve\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [{\n        name: \"\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_from\",\n        type: \"address\"\n      }, {\n        name: \"_to\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"transferFrom\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"decimals\",\n      outputs: [{\n        name: \"\",\n        type: \"uint8\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [{\n        name: \"_owner\",\n        type: \"address\"\n      }],\n      name: \"balanceOf\",\n      outputs: [{\n        name: \"balance\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [],\n      name: \"symbol\",\n      outputs: [{\n        name: \"\",\n        type: \"string\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      constant: false,\n      inputs: [{\n        name: \"_to\",\n        type: \"address\"\n      }, {\n        name: \"_value\",\n        type: \"uint256\"\n      }],\n      name: \"transfer\",\n      outputs: [{\n        name: \"\",\n        type: \"bool\"\n      }],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\"\n    }, {\n      constant: true,\n      inputs: [{\n        name: \"_owner\",\n        type: \"address\"\n      }, {\n        name: \"_spender\",\n        type: \"address\"\n      }],\n      name: \"allowance\",\n      outputs: [{\n        name: \"\",\n        type: \"uint256\"\n      }],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\"\n    }, {\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"fallback\"\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      }, {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      }, {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }],\n      name: \"Approval\",\n      type: \"event\"\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      }, {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      }, {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }],\n      name: \"Transfer\",\n      type: \"event\"\n    }], \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\");\n  }\n\n  async function load() {\n    console.log(\"EVO GA\");\n    await loadWeb3();\n    window.contract = await loadContract();\n    console.log(window.contract);\n    console.log(window.contract.methods);\n    console.log(\"USAO U LOAD u ADD RESULTS FOR FIGHTS LIST\");\n  }\n\n  load(this);\n\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\n    console.log(\"changeResultsHandler\");\n    console.log(\"FIGHT ID \", fightId);\n    console.log(\"WINNER ID \", winnerId);\n    console.log(\"WINNING METHOD \", winningMethod);\n    fightsResults.set(fightId, [winnerId, winningMethod]);\n  }; // function submitHandler() {\n  //   console.log(\"probica\");\n  //   console.log(\"loggedWalletAddress\", loggedWalletAddress);\n  //   console.log(\"adminWalletAddress\", adminWalletAddress);\n  //   if (loggedWalletAddress === adminWalletAddress) {\n  //     console.log(\"ISTI\");\n  //   } else if (loggedWalletAddress !== adminWalletAddress) {\n  //     console.log(\"NISU ISTI\");\n  //   }\n  // }\n\n\n  function submitHandlera() {\n    console.log(\"USAO U submitHandlera\");\n    asyncSubmitHandler();\n\n    async function asyncSubmitHandler() {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      let logedWalletAddress = accounts[0];\n      logedWalletAddress = logedWalletAddress.toUpperCase();\n      let adminWalletAddressUpperCase = adminWalletAddress.toUpperCase();\n      console.log(\"logedWalletAddress\", logedWalletAddress);\n      console.log(\"adminWalletAddress\", adminWalletAddressUpperCase);\n      console.log(\"logedWalletAddress type \", typeof logedWalletAddress);\n      console.log(\"adminWalletAddress type \", typeof adminWalletAddressUpperCase);\n      console.log(\"USAO U ASYNC submitHandler\");\n\n      if (logedWalletAddress === adminWalletAddressUpperCase) {\n        console.log(\"ISTE WALLET ADRESE\");\n        setPendingMessageHandler();\n        let walletAddressAndPrizeMap = null;\n\n        function logMapElements(value, key) {\n          returnFightIds.push(key);\n          returnWinnerIds.push(value[0]);\n          returnMethods.push(value[1]);\n        }\n\n        fightsResults.forEach(logMapElements);\n        console.log(returnFightIds);\n        console.log(returnWinnerIds);\n        console.log(returnMethods);\n\n        (async () => {\n          const response = await fetch(\"http://127.0.0.1:8000/api/results/event\", {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\",\n            method: \"put\",\n            body: JSON.stringify({\n              adminId: userId,\n              fightIds: returnFightIds,\n              winnerIds: returnWinnerIds,\n              methods: returnMethods\n            })\n          });\n          const map = await response.json();\n          console.log(\"IDE CONTENT\", map);\n          console.log(\"MAPA \", map);\n          console.log(\"TIP MAPE \", typeof map);\n          walletAddressAndPrizeMap = map;\n          console.log(\"PRIMIO GA \", walletAddressAndPrizeMap);\n          let transferSuccess;\n          console.log(\"PRED FOR \", walletAddressAndPrizeMap); // for (let [key, value] of walletAddressAndPrizeMap) {\n\n          for (const [key, value] of Object.entries(walletAddressAndPrizeMap)) {\n            console.log(\"pre roundinga \", value);\n            let roundedValue = Math.round(value * 100) / 100;\n            console.log(\"rounded value \", roundedValue);\n            console.log(\"from \" + adminWalletAddress + \" add \" + roundedValue + \"in \" + key);\n            console.log(\"TIP \", typeof roundedValue); // if(value !== 0) {\n            // try {\n\n            setPendingMessageHandler();\n            transferSuccess = await window.contract.methods.transfer(key, value.toFixed(2) * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\n            ).send({\n              from: adminWalletAddress\n            }); // } \n            // catch {\n            // console.log(\"Transaction failed!\");\n            // setErrorMessageHandler(\"Error while adding results!\");\n            // return;\n            // }\n\n            console.log(transferSuccess);\n          }\n        })(); // setPendingMessage();\n\n\n        history.replace(\"/past-events-and-fights\");\n      } else if (logedWalletAddress !== adminWalletAddressUpperCase) {\n        console.log(\"NISU ISTE WALLET ADRESE\");\n        setErrorMessageHandler(\"Wrong metamask account!\");\n        return;\n      }\n    }\n  }\n\n  function setPendingMessageHandler() {\n    // setSuccessMessage(\"\");\n    console.log(\"USAO U setPendingMessageHandler\");\n    setPendingMessage(\"Transaction in progress, please wait.\");\n    setErrorMessage(\"\");\n  }\n\n  function setErrorMessageHandler(errMess) {\n    // setSuccessMessage(\"\");\n    setPendingMessage(\"\");\n    setErrorMessage(errMess);\n  }\n\n  let validation = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 20\n  }, this);\n\n  if (pendingMessage !== \"\" && errorMessage === \"\") {\n    validation = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"validation\",\n      className: classes.alert_warning,\n      children: [pendingMessage, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://acegif.com/wp-content/uploads/loading-25.gif\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this); //https://i.stack.imgur.com/ATB3o.gif\n  } else if (pendingMessage === \"\" && errorMessage !== \"\") {\n    validation = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"validation\",\n      className: classes.alert_danger,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [validation, /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: eventName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.list,\n          children: fights.map(fight => /*#__PURE__*/_jsxDEV(AddResultsForFightsItem, {\n            id: fight.id,\n            redCornerFighter: fight.redCornerFighter,\n            blueCornerFighter: fight.blueCornerFighter,\n            redCornerOdds: fight.redCornerOdds,\n            event: fight.event,\n            changeResults: changeResultsHandler\n          }, fight.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#validation\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitHandlera,\n              children: \"Add result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddResultsForFightsList, \"ziZOeSq+qDPG0jXK1ScGJ9BSnGc=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = AddResultsForFightsList;\nexport default AddResultsForFightsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddResultsForFightsList\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/results/AddResultsForFightsList.js"],"names":["AddResultsForFightsItem","classes","useLocation","useHistory","useState","useEffect","axios","Card","Web3","AddResultsForFightsList","location","history","console","log","state","fights","setFights","adminWalletAddress","setAdminWalletAddress","eventId","setEventId","eventName","setEventName","userId","setUserId","pendingMessage","setPendingMessage","errorMessage","setErrorMessage","loggedWalletAddress","setLoggedWalletAddress","fightsResults","Map","returnFightIds","returnWinnerIds","returnMethods","method","url","then","response","data","catch","error","fetch","headers","credentials","content","json","id","admin","wallet_address","loadWeb3","window","ethereum","web3","enable","loadContract","version","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","load","contract","methods","changeResultsHandler","fightId","winnerId","winningMethod","set","submitHandlera","asyncSubmitHandler","accounts","request","logedWalletAddress","toUpperCase","adminWalletAddressUpperCase","setPendingMessageHandler","walletAddressAndPrizeMap","logMapElements","value","key","push","forEach","body","JSON","stringify","adminId","fightIds","winnerIds","map","transferSuccess","Object","entries","roundedValue","Math","round","transfer","toFixed","send","from","replace","setErrorMessageHandler","errMess","validation","alert_warning","alert_danger","form","list","fight","redCornerFighter","blueCornerFighter","redCornerOdds","event","actions"],"mappings":"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","sourcesContent":["// import FightItem from \"./FightItem\";\r\nimport AddResultsForFightsItem from \"./AddResultsForFightsItem\";\r\nimport classes from \"./AddResultsForFightsList.module.css\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"../ui/Card\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction AddResultsForFightsList() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  console.log(\"IDEMOOOO \", location.state);\r\n\r\n  const [fights, setFights] = useState([]);\r\n  const [adminWalletAddress, setAdminWalletAddress] = useState(\"\");\r\n\r\n  const [eventId, setEventId] = useState(\"\");\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [userId, setUserId] = useState();\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      setEventId(location.state.eventId);\r\n      setEventName(location.state.eventName);\r\n    }\r\n  }, []);\r\n\r\n  const [pendingMessage, setPendingMessage] = useState(\r\n    \"\" //Transaction in progress, please wait.\r\n  );\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); //Error while attempting transaction!\r\n\r\n  const [loggedWalletAddress, setLoggedWalletAddress] = useState(\"\");\r\n\r\n  const fightsResults = new Map();\r\n\r\n  let returnFightIds = [];\r\n  let returnWinnerIds = [];\r\n  let returnMethods = [];\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/fights/event?eventId=\" + location.state.eventId,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data);\r\n        const fights = response.data;\r\n        setFights(fights);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/user\", {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const content = await response.json();\r\n      console.log(\"IDE CONTENT\", content);\r\n      setUserId(content.id);\r\n    })();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/admin\",\r\n    }).then((response) => {\r\n      console.log(\"API ADMIN INACTIVE USER ITEM \", response.data);\r\n      let admin = response.data;\r\n      setAdminWalletAddress(admin.wallet_address);\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  //   console.log(\"FAJTERI U FIGHTER LIST\", props.fights);\r\n\r\n  async function loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.enable();\r\n      console.log(\"USAO U IF\");\r\n    }\r\n    console.log(\"USAO U loadWeb3\");\r\n  }\r\n\r\n  async function loadContract() {\r\n    console.log(\"VERZIJA WEB3\");\r\n    console.log(window.web3.version);\r\n    return await new window.web3.eth.Contract(\r\n      [\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"name\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"approve\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"totalSupply\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transferFrom\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"decimals\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint8\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"balanceOf\",\r\n          outputs: [\r\n            {\r\n              name: \"balance\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [],\r\n          name: \"symbol\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"string\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: \"_to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"transfer\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"bool\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"nonpayable\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          constant: true,\r\n          inputs: [\r\n            {\r\n              name: \"_owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              name: \"_spender\",\r\n              type: \"address\",\r\n            },\r\n          ],\r\n          name: \"allowance\",\r\n          outputs: [\r\n            {\r\n              name: \"\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: \"view\",\r\n          type: \"function\",\r\n        },\r\n        {\r\n          payable: true,\r\n          stateMutability: \"payable\",\r\n          type: \"fallback\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"owner\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"spender\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Approval\",\r\n          type: \"event\",\r\n        },\r\n        {\r\n          anonymous: false,\r\n          inputs: [\r\n            {\r\n              indexed: true,\r\n              name: \"from\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: true,\r\n              name: \"to\",\r\n              type: \"address\",\r\n            },\r\n            {\r\n              indexed: false,\r\n              name: \"value\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"Transfer\",\r\n          type: \"event\",\r\n        },\r\n      ],\r\n      \"0x3e6c08800313ae6a225a3f72c691bc4ce971dd03\"\r\n    );\r\n  }\r\n\r\n  async function load() {\r\n    console.log(\"EVO GA\");\r\n    await loadWeb3();\r\n    window.contract = await loadContract();\r\n    console.log(window.contract);\r\n    console.log(window.contract.methods);\r\n    console.log(\"USAO U LOAD u ADD RESULTS FOR FIGHTS LIST\");\r\n  }\r\n\r\n  load(this);\r\n\r\n  const changeResultsHandler = (fightId, winnerId, winningMethod) => {\r\n    console.log(\"changeResultsHandler\");\r\n    console.log(\"FIGHT ID \", fightId);\r\n    console.log(\"WINNER ID \", winnerId);\r\n    console.log(\"WINNING METHOD \", winningMethod);\r\n    fightsResults.set(fightId, [winnerId, winningMethod]);\r\n  };\r\n\r\n  // function submitHandler() {\r\n  //   console.log(\"probica\");\r\n  //   console.log(\"loggedWalletAddress\", loggedWalletAddress);\r\n  //   console.log(\"adminWalletAddress\", adminWalletAddress);\r\n  //   if (loggedWalletAddress === adminWalletAddress) {\r\n  //     console.log(\"ISTI\");\r\n  //   } else if (loggedWalletAddress !== adminWalletAddress) {\r\n  //     console.log(\"NISU ISTI\");\r\n  //   }\r\n  // }\r\n\r\n  function submitHandlera() {\r\n    console.log(\"USAO U submitHandlera\");\r\n    asyncSubmitHandler();\r\n    async function asyncSubmitHandler() {\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      let logedWalletAddress = accounts[0];\r\n      \r\n      logedWalletAddress = logedWalletAddress.toUpperCase();\r\n      let adminWalletAddressUpperCase = adminWalletAddress.toUpperCase();\r\n      \r\n      console.log(\"logedWalletAddress\", logedWalletAddress);\r\n      console.log(\"adminWalletAddress\", adminWalletAddressUpperCase);\r\n      console.log(\"logedWalletAddress type \", typeof(logedWalletAddress));\r\n      console.log(\"adminWalletAddress type \", typeof(adminWalletAddressUpperCase));\r\n      console.log(\"USAO U ASYNC submitHandler\");\r\n\r\n      if (logedWalletAddress === adminWalletAddressUpperCase) {\r\n        console.log(\"ISTE WALLET ADRESE\");\r\n        setPendingMessageHandler();\r\n        let walletAddressAndPrizeMap = null;\r\n\r\n        function logMapElements(value, key) {\r\n          returnFightIds.push(key);\r\n          returnWinnerIds.push(value[0]);\r\n          returnMethods.push(value[1]);\r\n        }\r\n\r\n        fightsResults.forEach(logMapElements);\r\n\r\n        console.log(returnFightIds);\r\n        console.log(returnWinnerIds);\r\n        console.log(returnMethods);\r\n\r\n        (async () => {\r\n          const response = await fetch(\r\n            \"http://127.0.0.1:8000/api/results/event\",\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              credentials: \"include\",\r\n              method: \"put\",\r\n              body: JSON.stringify({\r\n                adminId: userId,\r\n                fightIds: returnFightIds,\r\n                winnerIds: returnWinnerIds,\r\n                methods: returnMethods,\r\n              }),\r\n            }\r\n          );\r\n          const map = await response.json();\r\n          console.log(\"IDE CONTENT\", map);\r\n          console.log(\"MAPA \", map);\r\n          console.log(\"TIP MAPE \", typeof map);\r\n          walletAddressAndPrizeMap = map;\r\n          console.log(\"PRIMIO GA \", walletAddressAndPrizeMap);\r\n          let transferSuccess;\r\n          console.log(\"PRED FOR \", walletAddressAndPrizeMap);\r\n          // for (let [key, value] of walletAddressAndPrizeMap) {\r\n          for (const [key, value] of Object.entries(walletAddressAndPrizeMap)) {\r\n            console.log(\"pre roundinga \", value);\r\n            let roundedValue = Math.round(value * 100) / 100;\r\n              console.log(\"rounded value \", roundedValue);\r\n            console.log(\r\n              \"from \" + adminWalletAddress + \" add \" + roundedValue + \"in \" + key\r\n            );\r\n            console.log(\"TIP \", typeof roundedValue);\r\n            // if(value !== 0) {\r\n            \r\n            // try {\r\n              \r\n              setPendingMessageHandler();\r\n              transferSuccess = await window.contract.methods\r\n                .transfer(\r\n                  key,\r\n                  value.toFixed(2) * 100 //ovde ide puta 100 zbog dve decimale iza zagrade kod Perper-a\r\n                )\r\n                .send({ from: adminWalletAddress });\r\n            // } \r\n            // catch {\r\n              // console.log(\"Transaction failed!\");\r\n              // setErrorMessageHandler(\"Error while adding results!\");\r\n              // return;\r\n            // }\r\n            console.log(transferSuccess);\r\n          }\r\n        })();\r\n        // setPendingMessage();\r\n        history.replace(\"/past-events-and-fights\");\r\n      } else if (logedWalletAddress !== adminWalletAddressUpperCase) {\r\n        console.log(\"NISU ISTE WALLET ADRESE\")\r\n        setErrorMessageHandler(\"Wrong metamask account!\");\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function setPendingMessageHandler() {\r\n    // setSuccessMessage(\"\");\r\n    console.log(\"USAO U setPendingMessageHandler\");\r\n    setPendingMessage(\"Transaction in progress, please wait.\");\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function setErrorMessageHandler(errMess) {\r\n    // setSuccessMessage(\"\");\r\n    setPendingMessage(\"\");\r\n    setErrorMessage(errMess);\r\n  }\r\n\r\n  let validation = <div></div>;\r\n  if (pendingMessage !== \"\" && errorMessage === \"\") {\r\n    validation = (\r\n      <div id=\"validation\" className={classes.alert_warning}>\r\n        {pendingMessage}{\" \"}\r\n        <img\r\n          src=\"https://acegif.com/wp-content/uploads/loading-25.gif\"\r\n          width=\"50\"\r\n        ></img>\r\n      </div>\r\n    ); //https://i.stack.imgur.com/ATB3o.gif\r\n  } else if (pendingMessage === \"\" && errorMessage !== \"\") {\r\n    validation = (\r\n      <div id=\"validation\" className={classes.alert_danger}>\r\n        {errorMessage}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <div className={classes.form}>\r\n          <div className={classes.content}>\r\n            {validation}\r\n            <h2>{eventName}</h2>\r\n          </div>\r\n          <ul className={classes.list}>\r\n            {fights.map((fight) => (\r\n              <AddResultsForFightsItem\r\n                key={fight.id}\r\n                id={fight.id}\r\n                redCornerFighter={fight.redCornerFighter}\r\n                blueCornerFighter={fight.blueCornerFighter}\r\n                redCornerOdds={fight.redCornerOdds}\r\n                event={fight.event}\r\n                changeResults={changeResultsHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div className={classes.actions}>\r\n            <a href=\"#validation\">\r\n              <button onClick={submitHandlera}>Add result</button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default AddResultsForFightsList;\r\n"]},"metadata":{},"sourceType":"module"}