{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\bets\\\\AddBet.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AddBet.module.css\";\nimport Card from \"../ui/Card\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBet(props) {\n  _s();\n\n  const location = useLocation();\n  console.log(\"LOCATION \", location.state);\n  const stakeInputRef = useRef();\n  const [selectedOptionWinner, setSelectedOptionWinner] = useState(null);\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] = useState(null);\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\n  const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\n  const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\n  const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\n  const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\n  const [redCornerFighterAge, setRedCornerFighterAge] = useState(null);\n  const [blueCornerFighterAge, setBlueCornerFighterAge] = useState(null);\n  const [redCornerFighterHeight, setRedCornerFighterHeight] = useState(null);\n  const [blueCornerFighterHeight, setBlueCornerFighterHeight] = useState(null);\n  const [redCornerFighterWeight, setRedCornerFighteWeight] = useState(null);\n  const [blueCornerFighterWeight, setBlueCornerFighterWeight] = useState(null);\n  const [redCornerFighterReach, setRedCornerFighterReach] = useState(null);\n  const [blueCornerFighterReach, setBlueCornerFighterReach] = useState(null);\n  const [loadedFighters, setLoadedFighters] = useState([]);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fighters/\" + location.state.blueCornerFighterId\n    }).then(response => {\n      console.log(response.data);\n      let blueFighter = response.data;\n      setBlueCornerFighterName(blueFighter.name);\n      setBlueCornerFighterSurname(blueFighter.surname);\n      setBlueCornerFighterImg(blueFighter.image);\n      setBlueCornerFighterWins(blueFighter.wins);\n      setBlueCornerFighterLosses(blueFighter.losses);\n      setBlueCornerFighterAge(blueFighter.age);\n      setBlueCornerFighterHeight(blueFighter.height);\n      setBlueCornerFighterWeight(blueFighter.weight);\n      setBlueCornerFighterReach(blueFighter.reach);\n      loadedFighters.push({\n        value: blueFighter.id,\n        label: blueFighter.name + \" \" + blueFighter.surname\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"fighters/\" + location.state.redCornerFighterId\n    }).then(response => {\n      let redFighter = response.data;\n      setRedCornerFighterName(redFighter.name);\n      setRedCornerFighterSurname(redFighter.surname);\n      setRedCornerFighterImg(redFighter.image);\n      setRedCornerFighterWins(redFighter.wins);\n      setRedCornerFighterLosses(redFighter.losses);\n      setRedCornerFighterAge(redFighter.age);\n      setRedCornerFighterHeight(redFighter.height);\n      setRedCornerFighteWeight(redFighter.weight);\n      setRedCornerFighterReach(redFighter.reach);\n      loadedFighters.push({\n        value: redFighter.id,\n        label: redFighter.name + \" \" + redFighter.surname\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const makeABet = () => {\n    console.log(\"ide gasic\");\n\n    if (stakeInputRef.current.value === \"\" || selectedOptionWinner === null) {\n      console.log(\"alo nisi uneo ulog i pobednika\");\n    } else {\n      // console.log(\"selectedOptionWinner \", selectedOptionWinner.value);\n      axios({\n        method: 'post',\n        url: 'bets',\n        data: {\n          fight: props.fightId,\n          predicted_winner: selectedOptionWinner.value,\n          stake: stakeInputRef.current.value\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [redCornerFighterName, \" \", redCornerFighterSurname, \" vs\", \" \", blueCornerFighterName, \" \", blueCornerFighterSurname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: redCornerFighterImg,\n        alt: \"slika borca\",\n        height: \"200\",\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), \" \", \"vs\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: blueCornerFighterImg,\n        alt: \"slika borca\",\n        height: \"200\",\n        width: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.father,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.red,\n        children: [redCornerFighterWins, \"W : \", redCornerFighterLosses, \"L\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.atribute,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blue,\n        children: [blueCornerFighterWins, \"W : \", blueCornerFighterLosses, \"L\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.father,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.red,\n        children: redCornerFighterAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.atribute,\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blue,\n        children: blueCornerFighterAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.father,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.red,\n        children: [redCornerFighterHeight, \"cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.atribute,\n        children: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blue,\n        children: [blueCornerFighterHeight, \"cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.father,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.red,\n        children: [redCornerFighterWeight, \"kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.atribute,\n        children: \"Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blue,\n        children: [blueCornerFighterWeight, \"kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.father,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.red,\n        children: [redCornerFighterReach, \"cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.atribute,\n        children: \"Reach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.blue,\n        children: [blueCornerFighterReach, \"cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"redCornerFighter\",\n          children: \"Winner prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: selectedOptionWinner,\n            onChange: setSelectedOptionWinner,\n            options: loadedFighters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Amount of coins to bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          id: \"stake\",\n          ref: stakeInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: makeABet,\n          children: \"Make a bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddBet, \"bO9D2MVtMF/2yNLvu17nMLU8Ml0=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddBet;\nexport default AddBet;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBet\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/bets/AddBet.js"],"names":["classes","Card","axios","useState","useEffect","useRef","Select","useLocation","AddBet","props","location","console","log","state","stakeInputRef","selectedOptionWinner","setSelectedOptionWinner","redCornerFighterName","setRedCornerFighterName","blueCornerFighterName","setBlueCornerFighterName","redCornerFighterSurname","setRedCornerFighterSurname","blueCornerFighterSurname","setBlueCornerFighterSurname","redCornerFighterImg","setRedCornerFighterImg","blueCornerFighterImg","setBlueCornerFighterImg","redCornerFighterWins","setRedCornerFighterWins","blueCornerFighterWins","setBlueCornerFighterWins","redCornerFighterLosses","setRedCornerFighterLosses","blueCornerFighterLosses","setBlueCornerFighterLosses","redCornerFighterAge","setRedCornerFighterAge","blueCornerFighterAge","setBlueCornerFighterAge","redCornerFighterHeight","setRedCornerFighterHeight","blueCornerFighterHeight","setBlueCornerFighterHeight","redCornerFighterWeight","setRedCornerFighteWeight","blueCornerFighterWeight","setBlueCornerFighterWeight","redCornerFighterReach","setRedCornerFighterReach","blueCornerFighterReach","setBlueCornerFighterReach","loadedFighters","setLoadedFighters","method","url","blueCornerFighterId","then","response","data","blueFighter","name","surname","image","wins","losses","age","height","weight","reach","push","value","id","label","redCornerFighterId","redFighter","makeABet","current","fight","fightId","predicted_winner","stake","content","father","red","atribute","blue","form","control","actions"],"mappings":"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","sourcesContent":["import classes from \"./AddBet.module.css\";\r\nimport Card from \"../ui/Card\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction AddBet(props) {\r\n  const location = useLocation();\r\n  console.log(\"LOCATION \", location.state);\r\n\r\n  const stakeInputRef = useRef();\r\n\r\n  const [selectedOptionWinner, setSelectedOptionWinner] = useState(null);\r\n\r\n  const [redCornerFighterName, setRedCornerFighterName] = useState(null);\r\n  const [blueCornerFighterName, setBlueCornerFighterName] = useState(null);\r\n\r\n  const [redCornerFighterSurname, setRedCornerFighterSurname] = useState(null);\r\n  const [blueCornerFighterSurname, setBlueCornerFighterSurname] =\r\n    useState(null);\r\n\r\n  const [redCornerFighterImg, setRedCornerFighterImg] = useState(null);\r\n  const [blueCornerFighterImg, setBlueCornerFighterImg] = useState(null);\r\n\r\n  const [redCornerFighterWins, setRedCornerFighterWins] = useState(null);\r\n  const [blueCornerFighterWins, setBlueCornerFighterWins] = useState(null);\r\n\r\n  const [redCornerFighterLosses, setRedCornerFighterLosses] = useState(null);\r\n  const [blueCornerFighterLosses, setBlueCornerFighterLosses] = useState(null);\r\n\r\n  const [redCornerFighterAge, setRedCornerFighterAge] = useState(null);\r\n  const [blueCornerFighterAge, setBlueCornerFighterAge] = useState(null);\r\n\r\n  const [redCornerFighterHeight, setRedCornerFighterHeight] = useState(null);\r\n  const [blueCornerFighterHeight, setBlueCornerFighterHeight] = useState(null);\r\n\r\n  const [redCornerFighterWeight, setRedCornerFighteWeight] = useState(null);\r\n  const [blueCornerFighterWeight, setBlueCornerFighterWeight] = useState(null);\r\n\r\n  const [redCornerFighterReach, setRedCornerFighterReach] = useState(null);\r\n  const [blueCornerFighterReach, setBlueCornerFighterReach] = useState(null);\r\n\r\n  const [loadedFighters, setLoadedFighters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + location.state.blueCornerFighterId,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      let blueFighter = response.data;\r\n      setBlueCornerFighterName(blueFighter.name);\r\n      setBlueCornerFighterSurname(blueFighter.surname);\r\n      setBlueCornerFighterImg(blueFighter.image);\r\n      setBlueCornerFighterWins(blueFighter.wins);\r\n      setBlueCornerFighterLosses(blueFighter.losses);\r\n      setBlueCornerFighterAge(blueFighter.age);\r\n      setBlueCornerFighterHeight(blueFighter.height);\r\n      setBlueCornerFighterWeight(blueFighter.weight);\r\n      setBlueCornerFighterReach(blueFighter.reach);\r\n      loadedFighters.push({\r\n        value: blueFighter.id,\r\n        label: blueFighter.name + \" \" + blueFighter.surname,\r\n      });\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"fighters/\" + location.state.redCornerFighterId,\r\n    }).then((response) => {\r\n      let redFighter = response.data;\r\n      setRedCornerFighterName(redFighter.name);\r\n      setRedCornerFighterSurname(redFighter.surname);\r\n      setRedCornerFighterImg(redFighter.image);\r\n      setRedCornerFighterWins(redFighter.wins);\r\n      setRedCornerFighterLosses(redFighter.losses);\r\n      setRedCornerFighterAge(redFighter.age);\r\n      setRedCornerFighterHeight(redFighter.height);\r\n      setRedCornerFighteWeight(redFighter.weight);\r\n      setRedCornerFighterReach(redFighter.reach);\r\n      loadedFighters.push({\r\n        value: redFighter.id,\r\n        label: redFighter.name + \" \" + redFighter.surname,\r\n      });\r\n    });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const makeABet = () => {\r\n    console.log(\"ide gasic\");\r\n    if (stakeInputRef.current.value === \"\" || selectedOptionWinner === null) {\r\n      console.log(\"alo nisi uneo ulog i pobednika\");\r\n    } else {\r\n      // console.log(\"selectedOptionWinner \", selectedOptionWinner.value);\r\n      axios({\r\n        method: 'post',\r\n        url: 'bets',\r\n        data: {\r\n          fight: props.fightId,\r\n          predicted_winner: selectedOptionWinner.value,\r\n          stake: stakeInputRef.current.value\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div className={classes.content}>\r\n        <h2>\r\n          {redCornerFighterName} {redCornerFighterSurname} vs{\" \"}\r\n          {blueCornerFighterName} {blueCornerFighterSurname}\r\n        </h2>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <img\r\n          src={redCornerFighterImg}\r\n          alt=\"slika borca\"\r\n          height=\"200\"\r\n          width=\"200\"\r\n        ></img>{\" \"}\r\n        vs{\" \"}\r\n        <img\r\n          src={blueCornerFighterImg}\r\n          alt=\"slika borca\"\r\n          height=\"200\"\r\n          width=\"200\"\r\n        ></img>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterWins}W : {redCornerFighterLosses}L</div>\r\n        <div className={classes.atribute}>Record</div>\r\n        <div className={classes.blue}>{blueCornerFighterWins}W : {blueCornerFighterLosses}L</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterAge}</div>\r\n        <div className={classes.atribute}>Age</div>\r\n        <div className={classes.blue}>{blueCornerFighterAge}</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterHeight}cm</div>\r\n        <div className={classes.atribute}>Height</div>\r\n        <div className={classes.blue}>{blueCornerFighterHeight}cm</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterWeight}kg</div>\r\n        <div className={classes.atribute}>Weight</div>\r\n        <div className={classes.blue}>{blueCornerFighterWeight}kg</div>\r\n      </div>\r\n      <div className={classes.father}>\r\n        <div className={classes.red}>{redCornerFighterReach}cm</div>\r\n        <div className={classes.atribute}>Reach</div>\r\n        <div className={classes.blue}>{blueCornerFighterReach}cm</div>\r\n      </div>\r\n\r\n      <div className={classes.form}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"redCornerFighter\">Winner prediction</label>\r\n          <div>\r\n            <Select\r\n              defaultValue={selectedOptionWinner}\r\n              onChange={setSelectedOptionWinner}\r\n              options={loadedFighters}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"age\">Amount of coins to bet</label>\r\n          <input type=\"number\" required id=\"stake\" ref={stakeInputRef} />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button onClick={makeABet}>Make a bet</button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AddBet;\r\n"]},"metadata":{},"sourceType":"module"}