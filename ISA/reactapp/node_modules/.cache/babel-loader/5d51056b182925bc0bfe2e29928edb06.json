{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\bets\\\\FightForEvent.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FightForEvent(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\n  console.log(\"PROPS \", props.id, props.redCornerFighter, props.blueCornerFighter, props.redCornerOdds);\n  useEffect(() => {\n    setIsLoading(true);\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setRedCornerFighter(fighter);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setBlueCornerFighter(fighter);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const istina = true;\n\n  if (istina) {\n    console.log(\"idemo gas\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [redCornerFighter.name, \" \", redCornerFighter.surname, \" vs\", \" \", blueCornerFighter.name, \" \", blueCornerFighter.surname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FightForEvent, \"IDCj7QukeLyLwxl9WLzTSaSi7z0=\");\n\n_c = FightForEvent;\nexport default FightForEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightForEvent\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/bets/FightForEvent.js"],"names":["axios","useState","useEffect","FightForEvent","props","isLoading","setIsLoading","redCornerFighter","setRedCornerFighter","blueCornerFighter","setBlueCornerFighter","console","log","id","redCornerOdds","method","url","then","response","fighter","data","catch","error","istina","name","surname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;AAEAU,EAAAA,OAAO,CAACC,GAAR,CACE,QADF,EAEER,KAAK,CAACS,EAFR,EAGET,KAAK,CAACG,gBAHR,EAIEH,KAAK,CAACK,iBAJR,EAKEL,KAAK,CAACU,aALR;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,KAAK,CAAC;AACJe,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,0BAA0BZ,KAAK,CAACG;AAFjC,KAAD,CAAL,CAIGU,IAJH,CAISC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,UAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAd;AACAZ,MAAAA,mBAAmB,CAACW,OAAD,CAAnB;AACD,KARH,EASGE,KATH,CASUC,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAXH;AAYD,GAdQ,EAcN,EAdM,CAAT;AAgBApB,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAAC;AACJe,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,0BAA0BZ,KAAK,CAACK;AAFjC,KAAD,CAAL,CAIGQ,IAJH,CAISC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,UAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAd;AACAV,MAAAA,oBAAoB,CAACS,OAAD,CAApB;AACD,KARH,EASGE,KATH,CASUC,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAMC,MAAM,GAAG,IAAf;;AACA,MAAIA,MAAJ,EAAY;AACVZ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAED,sBACE;AAAA,2BACE;AAAA,iBACGL,gBAAgB,CAACiB,IADpB,OAC2BjB,gBAAgB,CAACkB,OAD5C,SACwD,GADxD,EAEGhB,iBAAiB,CAACe,IAFrB,OAE4Bf,iBAAiB,CAACgB,OAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzDQtB,a;;KAAAA,a;AA2DT,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction FightForEvent(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\r\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\r\n\r\n  console.log(\r\n    \"PROPS \",\r\n    props.id,\r\n    props.redCornerFighter,\r\n    props.blueCornerFighter,\r\n    props.redCornerOdds\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setRedCornerFighter(fighter);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setBlueCornerFighter(fighter);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const istina = true;\r\n  if (istina) {\r\n    console.log(\"idemo gas\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {redCornerFighter.name} {redCornerFighter.surname} vs{\" \"}\r\n        {blueCornerFighter.name} {blueCornerFighter.surname}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FightForEvent;\r\n"]},"metadata":{},"sourceType":"module"}