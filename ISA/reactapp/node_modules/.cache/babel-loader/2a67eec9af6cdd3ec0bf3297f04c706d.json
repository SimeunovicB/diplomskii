{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\pages\\\\AllFights.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport FightList from \"../fights/FightList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllFights() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadedFights, setLoadedFights] = useState([]); // useEffect(() => {\n  //   setIsLoading(true);\n  //   axios({\n  //     method: \"get\",\n  //     url: \"fights\",\n  //   }).then((response) => {\n  //     let fights = response.data;\n  //     let ret = [];\n  //     console.log(\"FAJTOVI\", fights)\n  //     for(let i in fights) {\n  //       // console.log(fighters[i]);\n  //       ret.push(fights[i]);\n  //     }\n  //     console.log(\"RET\", ret);\n  //     if(fights === ret) {\n  //       console.log(\"ISTO\");\n  //     } else {\n  //       console.log(\"NIJE ISTO\")\n  //     }\n  //     setIsLoading(false);\n  //     setLoadedFights(ret);\n  //     // console.log(\"LOADED\",loadedFighters);\n  //   });\n  // }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios({\n      method: \"get\",\n      url: \"api/fights/event\",\n      data: {\n        eventId: 3\n      }\n    }).then(response => {\n      let fights = response.data;\n      let ret = [];\n      console.log(\"FAJTOVI\", fights);\n\n      for (let i in fights) {\n        // console.log(fighters[i]);\n        ret.push(fights[i]);\n      }\n\n      console.log(\"RET\", ret);\n\n      if (fights === ret) {\n        console.log(\"ISTO\");\n      } else {\n        console.log(\"NIJE ISTO\");\n      }\n\n      setIsLoading(false);\n      setLoadedFights(ret); // console.log(\"LOADED\",loadedFighters);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All fights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FightList, {\n      fights: loadedFights\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllFights, \"X4DmZfyFF69pgnWAoX1ZugEo/yU=\");\n\n_c = AllFights;\nexport default AllFights;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllFights\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/pages/AllFights.js"],"names":["useState","useEffect","axios","FightList","AllFights","isLoading","setIsLoading","loadedFights","setLoadedFights","method","url","data","eventId","then","response","fights","ret","console","log","i","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAFmB,CAInB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAJ,IAAAA,KAAK,CAAC;AACJO,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,kBAFD;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AADL;AAHF,KAAD,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAc;AACpB,UAAIC,MAAM,GAAGD,QAAQ,CAACH,IAAtB;AACA,UAAIK,GAAG,GAAG,EAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;;AACA,WAAI,IAAII,CAAR,IAAaJ,MAAb,EAAqB;AACnB;AACAC,QAAAA,GAAG,CAACI,IAAJ,CAASL,MAAM,CAACI,CAAD,CAAf;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AACA,UAAGD,MAAM,KAAKC,GAAd,EAAmB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACDZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,eAAe,CAACQ,GAAD,CAAf,CAfoB,CAgBpB;AACD,KAvBD;AAwBD,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,MAAIX,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1EQH,S;;KAAAA,S;AA4ET,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport FightList from \"../fights/FightList\";\r\n\r\nfunction AllFights() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedFights, setLoadedFights] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n\r\n  //   axios({\r\n  //     method: \"get\",\r\n  //     url: \"fights\",\r\n  //   }).then((response) => {\r\n  //     let fights = response.data;\r\n  //     let ret = [];\r\n  //     console.log(\"FAJTOVI\", fights)\r\n  //     for(let i in fights) {\r\n  //       // console.log(fighters[i]);\r\n  //       ret.push(fights[i]);\r\n  //     }\r\n  //     console.log(\"RET\", ret);\r\n  //     if(fights === ret) {\r\n  //       console.log(\"ISTO\");\r\n  //     } else {\r\n  //       console.log(\"NIJE ISTO\")\r\n  //     }\r\n  //     setIsLoading(false);\r\n  //     setLoadedFights(ret);\r\n  //     // console.log(\"LOADED\",loadedFighters);\r\n  //   });\r\n  // }, []); //ako se drugom argumentu promeni stanje onda se opet pozove funkcija\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios({\r\n      method: \"get\",\r\n      url: \"api/fights/event\",\r\n      data: {\r\n        eventId: 3\r\n      }\r\n    }).then((response) => {\r\n      let fights = response.data;\r\n      let ret = [];\r\n      console.log(\"FAJTOVI\", fights)\r\n      for(let i in fights) {\r\n        // console.log(fighters[i]);\r\n        ret.push(fights[i]);\r\n      }\r\n      console.log(\"RET\", ret);\r\n      if(fights === ret) {\r\n        console.log(\"ISTO\");\r\n      } else {\r\n        console.log(\"NIJE ISTO\")\r\n      }\r\n      setIsLoading(false);\r\n      setLoadedFights(ret);\r\n      // console.log(\"LOADED\",loadedFighters);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>All fights</h1>\r\n      <FightList fights={loadedFights} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllFights;\r\n"]},"metadata":{},"sourceType":"module"}