{"ast":null,"code":"var _jsxFileName = \"G:\\\\FAKS PREDMETI\\\\diplomskii\\\\ISA\\\\reactapp\\\\src\\\\components\\\\eventAndFight\\\\FightForEvent.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./FightForEvent.module.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FightForEvent(props) {\n  _s();\n\n  const useHistory = useHistory();\n  const [isLoadingRed, setIsLoadingRed] = useState(false);\n  const [isLoadingBlue, setIsLoadingBlue] = useState(false);\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\n  console.log(\"PROPS \", props.id, props.redCornerFighter, props.blueCornerFighter, props.redCornerOdds);\n  useEffect(() => {\n    setIsLoadingRed(true);\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setRedCornerFighter(fighter);\n      setIsLoadingRed(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setIsLoadingBlue(true);\n    axios({\n      method: \"GET\",\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter\n    }).then(response => {\n      console.log(response);\n      let fighter = response.data[0];\n      setBlueCornerFighter(fighter);\n      setIsLoadingBlue(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const makeABetHandler = () => {\n    console.log(\"zivot je igra\");\n    console.log(\"fight id \", props.id);\n  };\n\n  const istina = true;\n\n  if (istina) {\n    console.log(\"idemo gas\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoadingRed || isLoadingBlue ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fight,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [redCornerFighter.name, \" \", redCornerFighter.surname, \" vs\", \" \", blueCornerFighter.name, \" \", blueCornerFighter.surname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: makeABetHandler,\n          children: \"Bet on fight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FightForEvent, \"YnnJvjbN2J3bBNn11uGcEvuKJjw=\", false, function () {\n  return [useHistory];\n});\n\n_c = FightForEvent;\nexport default FightForEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FightForEvent\");","map":{"version":3,"sources":["G:/FAKS PREDMETI/diplomskii/ISA/reactapp/src/components/eventAndFight/FightForEvent.js"],"names":["classes","axios","useState","useEffect","useHistory","FightForEvent","props","isLoadingRed","setIsLoadingRed","isLoadingBlue","setIsLoadingBlue","redCornerFighter","setRedCornerFighter","blueCornerFighter","setBlueCornerFighter","console","log","id","redCornerOdds","method","url","then","response","fighter","data","catch","error","makeABetHandler","istina","fight","name","surname"],"mappings":"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","sourcesContent":["import classes from \"./FightForEvent.module.css\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction FightForEvent(props) {\r\n\r\n  const useHistory = useHistory();\r\n\r\n  const [isLoadingRed, setIsLoadingRed] = useState(false);\r\n  const [isLoadingBlue, setIsLoadingBlue] = useState(false);\r\n  const [redCornerFighter, setRedCornerFighter] = useState(\"\");\r\n  const [blueCornerFighter, setBlueCornerFighter] = useState(\"\");\r\n\r\n  console.log(\r\n    \"PROPS \",\r\n    props.id,\r\n    props.redCornerFighter,\r\n    props.blueCornerFighter,\r\n    props.redCornerOdds\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoadingRed(true);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.redCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setRedCornerFighter(fighter);\r\n        setIsLoadingRed(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsLoadingBlue(true);\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"api/fighter/fight?id=\" + props.blueCornerFighter,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let fighter = response.data[0];\r\n        setBlueCornerFighter(fighter);\r\n        setIsLoadingBlue(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const makeABetHandler = () => {\r\n    console.log(\"zivot je igra\")\r\n    console.log(\"fight id \", props.id);\r\n  }\r\n\r\n  const istina = true;\r\n  if (istina) {\r\n    console.log(\"idemo gas\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoadingRed || isLoadingBlue ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div className={classes.fight}>\r\n          {/* <div className={classes.actions}> */}\r\n          <div>\r\n            {redCornerFighter.name} {redCornerFighter.surname} vs{\" \"}\r\n            {blueCornerFighter.name} {blueCornerFighter.surname}\r\n          </div>\r\n          <div>\r\n            <button onClick={makeABetHandler}>Bet on fight</button>\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FightForEvent;\r\n"]},"metadata":{},"sourceType":"module"}